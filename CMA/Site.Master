<%@ Master Language="C#" AutoEventWireup="true" CodeBehind="Site.master.cs" Inherits="CMA.SiteMaster" %>

<!DOCTYPE html>

<html lang="en">
<head runat="server">
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%: Page.Title %> - My ASP.NET Application</title>

    <asp:PlaceHolder runat="server">
        <%: Scripts.Render("~/bundles/modernizr") %>
    </asp:PlaceHolder>

    <webopt:BundleReference runat="server" Path="~/Content/css" />
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <%-- Custom CSS --%>
    <link href="/assets/css/admin-theme.css" rel="stylesheet">


   
</head>
<body data-theme="default">
    <form runat="server">
        <asp:ScriptManager runat="server">
            <Scripts>
                <%--To learn more about bundling scripts in ScriptManager see https://go.microsoft.com/fwlink/?LinkID=301884 --%>
                <%--Framework Scripts--%>
                <asp:ScriptReference Name="MsAjaxBundle" />
                <asp:ScriptReference Name="jquery" />
                <asp:ScriptReference Name="WebForms.js" Assembly="System.Web" Path="~/Scripts/WebForms/WebForms.js" />
                <asp:ScriptReference Name="WebUIValidation.js" Assembly="System.Web" Path="~/Scripts/WebForms/WebUIValidation.js" />
                <asp:ScriptReference Name="MenuStandards.js" Assembly="System.Web" Path="~/Scripts/WebForms/MenuStandards.js" />
                <asp:ScriptReference Name="GridView.js" Assembly="System.Web" Path="~/Scripts/WebForms/GridView.js" />
                <asp:ScriptReference Name="DetailsView.js" Assembly="System.Web" Path="~/Scripts/WebForms/DetailsView.js" />
                <asp:ScriptReference Name="TreeView.js" Assembly="System.Web" Path="~/Scripts/WebForms/TreeView.js" />
                <asp:ScriptReference Name="WebParts.js" Assembly="System.Web" Path="~/Scripts/WebForms/WebParts.js" />
                <asp:ScriptReference Name="Focus.js" Assembly="System.Web" Path="~/Scripts/WebForms/Focus.js" />
                <asp:ScriptReference Name="WebFormsBundle" />
                <%--Site Scripts--%>
            </Scripts>
        </asp:ScriptManager>

        <!-- Sidebar -->
        <aside class="sidebar glass">
            <div class="sidebar-header">
                <a href="#" class="logo">
                    <i class="fas fa-hard-hat"></i>
                    <span class="logo-text">FSBuilds<span class="text-danger">Pro</span></span>
                </a>
                <button class="sidebar-toggle">
                    <i class="fas fa-bars"></i>
                </button>
            </div>
            <div class="sidebar-menu">
                <div class="menu-item">
                    <a href="#" class="menu-link active" data-section="dashboard" title="Dashboard">
                        <i class="fas fa-chart-pie"></i>
                        <span class="menu-text">Dashboard</span>
                    </a>
                </div>
                <div class="menu-item">
                    <a href="#" class="menu-link" data-section="projects">
                        <i class="fas fa-building"></i>
                        <span class="menu-text">Projects</span>
                        <span class="menu-badge">12</span>
                    </a>
                </div>
                <div class="menu-item">
                    <a href="#" class="menu-link" data-section="clients">
                        <i class="fas fa-users"></i>
                        <span class="menu-text">Clients</span>
                        <span class="menu-badge">24</span>
                    </a>
                </div>
                <div class="menu-item">
                    <a href="#" class="menu-link" data-section="contractors">
                        <i class="fas fa-user-hard-hat"></i>
                        <span class="menu-text">Contractors</span>
                        <span class="menu-badge">8</span>
                    </a>
                </div>

                <div class="menu-item">
                    <a href="#" class="menu-link" data-section="employees">
                        <i class="fas fa-user-hard-hat"></i>
                        <span class="menu-text">Employees</span>
                        <span class="menu-badge">8</span>
                    </a>
                </div>

                <div class="menu-item">
                    <a href="#" class="menu-link" data-section="services">
                        <i class="fas fa-tools"></i>
                        <span class="menu-text">Services</span>
                    </a>
                </div>

                <div class="menu-item">
                    <a href="#" class="menu-link" data-section="payments">
                        <i class="fas fa-tools"></i>
                        <span class="menu-text">Payments</span>
                    </a>
                </div>
                <div class="menu-item">
                    <a href="#" class="menu-link" data-section="reports">
                        <i class="fas fa-chart-bar"></i>
                        <span class="menu-text">Reports</span>
                    </a>
                </div>
                <div class="menu-item">
                    <a href="#" class="menu-link" data-section="settings">
                        <i class="fas fa-cog"></i>
                        <span class="menu-text">Settings</span>
                    </a>
                </div>
            </div>
        </aside>

        <%--  <div class="container body-content">
           
        </div>--%>

        <!-- Main Content -->
        <main class="main-content">
            <!-- Header -->
            <header class="header glass">
                <div class="header-left">
                    <h1 class="page-title">Dashboard</h1>
                </div>
                <div class="header-right">
                    <div class="theme-controls">
                        <div class="theme-btn theme-default" data-theme="default"></div>
                        <div class="theme-btn theme-dark" data-theme="dark"></div>
                        <div class="theme-btn theme-blue" data-theme="blue"></div>
                        <div class="theme-btn theme-green" data-theme="green"></div>
                        <div class="theme-btn theme-purple" data-theme="purple"></div>
                    </div>
                    <div class="notification-icon">
                        <i class="fas fa-bell"></i>
                        <span class="notification-badge">5</span>
                    </div>

                    <button class="btn btn-warning btn-sm client-requests-btn">
                        <i class="fas fa-users me-1"></i>Client Requests
                        <span class="badge bg-danger ms-1">2</span>
                    </button>
                    <!-- User Profile Section -->
                    <div class="user-profile">
                        <i class="fas fa-user-circle"></i>
                        <div class="user-dropdown glass">
                            <!-- Login option (shown when not logged in) -->
                            <a href="#" class="user-dropdown-item login-link">
                                <i class="fas fa-sign-in-alt me-2"></i>Login
                            </a>

                            <!-- User info and options (shown when logged in) -->
                            <div class="logged-in-options" style="display: none;">
                                <div class="user-info p-2">
                                    <span class="d-block user-name">Admin</span>
                                    <small class="text-muted user-role">Administrator</small>
                                </div>
                                <a href="#" class="user-dropdown-item profile-link">
                                    <i class="fas fa-user me-2"></i>My Profile
                                </a>
                                <a href="#" class="user-dropdown-item">
                                    <i class="fas fa-cog me-2"></i>Settings
                                </a>
                                <div class="dropdown-divider"></div>
                                <a href="#" class="user-dropdown-item logout-btn">
                                    <i class="fas fa-sign-out-alt me-2"></i>Logout
                                </a>
                            </div>
                        </div>
                    </div>

                 

                    <script>
                        $(document).ready(function () {

                            $('.btn').click(function (e) {
                                e.preventDefault();
                            });
                            // Alert notification function
                            function showAlert(message, type = 'info') {
                                const alertClass = {
                                    'success': 'alert-success',
                                    'error': 'alert-danger',
                                    'warning': 'alert-warning',
                                    'info': 'alert-info'
                                }[type] || 'alert-info';

                                const alertHtml = `
            <div class="alert ${alertClass} alert-dismissible fade show position-fixed top-0 end-0 m-3" style="z-index: 1060;">
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        `;

                                $('body').append(alertHtml);

                                // Auto remove after 5 seconds
                                setTimeout(() => {
                                    $('.alert').alert('close');
                                }, 5000);
                            }

                            // Check login status on page load
                            function checkLoginStatus() {
                                const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';
                                updateUserInterface(isLoggedIn);
                            }

                            // Update UI based on login status
                            function updateUserInterface(isLoggedIn) {
                                if (isLoggedIn) {
                                    const userName = localStorage.getItem('userName') || 'User';
                                    const userRole = localStorage.getItem('userRole') || 'user';

                                    // Hide login link, show user options
                                    $('.login-link').hide();
                                    $('.logged-in-options').show();

                                    // Update user info
                                    $('.user-name').text(userName);
                                    $('.user-role').text(userRole.charAt(0).toUpperCase() + userRole.slice(1));

                                } else {
                                    // Show login link, hide user options
                                    $('.login-link').show();
                                    $('.logged-in-options').hide();
                                }
                            }

                            // Login functionality
                            $('#loginForm').on('submit', function (e) {
                                e.preventDefault();

                                const email = $('#loginEmail').val();
                                const password = $('#loginPassword').val();
                                const rememberMe = $('#rememberMe').is(':checked');

                                // Simple validation
                                if (!email || !password) {
                                    showAlert('Please fill in all fields', 'error');
                                    return;
                                }

                                // Mock login - replace with actual API call
                                if (email === 'admin@buildright.com' && password === 'password') {
                                    // Store login state
                                    localStorage.setItem('isLoggedIn', 'true');
                                    localStorage.setItem('userEmail', email);
                                    localStorage.setItem('userName', 'John Doe');
                                    localStorage.setItem('userRole', 'admin');

                                    // Update UI
                                    updateUserInterface(true);

                                    // Close modal
                                    $('#loginModal').modal('hide');

                                    showAlert('Login successful!', 'success');
                                } else {
                                    showAlert('Invalid email or password', 'error');
                                }
                            });

                            // Profile save functionality
                            $('#saveProfile').on('click', function () {
                                const formData = {
                                    firstName: $('#profileFirstName').val(),
                                    lastName: $('#profileLastName').val(),
                                    email: $('#profileEmail').val(),
                                    phone: $('#profilePhone').val(),
                                    address: $('#profileAddress').val(),
                                    department: $('#profileDepartment').val(),
                                    role: $('#profileRole').val()
                                };

                                // Validate password change if any password field is filled
                                const currentPassword = $('#currentPassword').val();
                                const newPassword = $('#newPassword').val();
                                const confirmPassword = $('#confirmPassword').val();

                                if (newPassword || confirmPassword || currentPassword) {
                                    if (!currentPassword) {
                                        showAlert('Please enter current password', 'error');
                                        return;
                                    }
                                    if (newPassword !== confirmPassword) {
                                        showAlert('New passwords do not match', 'error');
                                        return;
                                    }
                                    if (newPassword.length < 6) {
                                        showAlert('New password must be at least 6 characters', 'error');
                                        return;
                                    }
                                }

                                // Mock save - replace with actual API call
                                localStorage.setItem('userName', `${formData.firstName} ${formData.lastName}`);
                                localStorage.setItem('userEmail', formData.email);

                                // Update UI
                                updateUserInterface(true);

                                $('#userProfileModal').modal('hide');
                                showAlert('Profile updated successfully!', 'success');

                                // Clear password fields
                                $('#currentPassword, #newPassword, #confirmPassword').val('');
                            });

                            // Logout functionality
                            $(document).on('click', '.logout-btn', function (e) {
                                e.preventDefault();

                                // Clear login data
                                localStorage.removeItem('isLoggedIn');
                                localStorage.removeItem('userName');
                                localStorage.removeItem('userEmail');
                                localStorage.removeItem('userRole');

                                // Update UI
                                updateUserInterface(false);

                                showAlert('You have been logged out', 'info');
                            });

                            // Open login modal when clicking login link - FIXED
                            $(document).on('click', '.login-link', function (e) {
                                e.preventDefault();
                                e.stopPropagation(); // Important: prevent event bubbling
                                console.log('Login link clicked'); // Debug log
                                $('#loginModal').modal('show');
                            });

                            // Open profile modal
                            $(document).on('click', '.profile-link', function (e) {
                                e.preventDefault();
                                $('#userProfileModal').modal('show');
                            });

                            // Initialize
                            checkLoginStatus();

                            // Debug: Check if elements exist
                            console.log('Login links found:', $('.login-link').length);
                            console.log('Login modal exists:', $('#loginModal').length);
                        });
                    </script>




                </div>


            </header>

            <!-- Content Area -->
            <div class="content">
                <asp:ContentPlaceHolder ID="MainContent" runat="server">
                </asp:ContentPlaceHolder>
                <hr />
                <footer>
                    <p>&copy; <%: DateTime.Now.Year %> - My ASP.NET Application</p>
                </footer>


            </div>
        </main>




        <!-- Payment Management Modal -->
        <div class="modal fade" id="paymentManagementModal" tabindex="-1" aria-labelledby="paymentManagementModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content glass">
                    <div class="modal-header">
                        <h5 class="modal-title" id="paymentManagementModalLabel">
                            <span id="paymentModalAction">Manage Payment</span>
                        </h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" id="paymentId">
                        <input type="hidden" id="paymentActionType">
                        <!-- add, view, edit -->

                        <!-- Alert Section -->
                        <div class="alert" id="paymentModalAlert">
                            <i class="fas fa-info-circle me-2"></i>
                            <span id="paymentAlertMessage">Managing payment</span>
                        </div>

                        <!-- Payment Type Selection -->
                        <div class="card glass mb-4">
                            <div class="card-header">
                                <h6 class="mb-0">Payment Type</h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="paymentType" class="form-label">Payment Direction *</label>
                                            <select class="form-select" id="paymentType" required>
                                                <option value="">Select Payment Type</option>
                                                <option value="client_to_contractor">Client → Contractor</option>
                                                <option value="contractor_to_employee">Contractor → Employee</option>
                                                <option value="company_to_contractor">Company → Contractor</option>
                                                <option value="company_to_employee">Company → Employee</option>
                                                <option value="refund">Refund to Client</option>
                                                <option value="client_to_company">Client → Company</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="paymentCategory" class="form-label">Payment Category</label>
                                            <select class="form-select" id="paymentCategory">
                                                <option value="project_payment">Project Payment</option>
                                                <option value="salary">Salary</option>
                                                <option value="bonus">Bonus</option>
                                                <option value="expense_reimbursement">Expense Reimbursement</option>
                                                <option value="advance">Advance Payment</option>
                                                <option value="retainer">Retainer</option>
                                                <option value="other">Other</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Parties Information -->
                        <div class="card glass mb-4">
                            <div class="card-header">
                                <h6 class="mb-0">Parties Information</h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="paymentFrom" class="form-label">Payer (From) *</label>
                                            <select class="form-select" id="paymentFrom" required>
                                                <option value="">Select Payer</option>
                                                <!-- Options will be populated dynamically based on payment type -->
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="paymentTo" class="form-label">Payee (To) *</label>
                                            <select class="form-select" id="paymentTo" required>
                                                <option value="">Select Payee</option>
                                                <!-- Options will be populated dynamically based on payment type -->
                                            </select>
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label for="paymentProject" class="form-label">Related Project</label>
                                    <select class="form-select" id="paymentProject">
                                        <option value="">Select Project (Optional)</option>
                                        <option value="1">Hilltop Residence</option>
                                        <option value="2">Downtown Plaza</option>
                                        <option value="3">Logistics Hub</option>
                                        <option value="4">Old Town Theater</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <!-- Payment Details -->
                        <div class="card glass mb-4">
                            <div class="card-header">
                                <h6 class="mb-0">Payment Details</h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="paymentAmount" class="form-label">Amount *</label>
                                            <div class="input-group">
                                                <span class="input-group-text">$</span>
                                                <input type="number" class="form-control" id="paymentAmount" required step="0.01">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="paymentDate" class="form-label">Payment Date *</label>
                                            <input type="date" class="form-control" id="paymentDate" required>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="paymentMethod" class="form-label">Payment Method *</label>
                                            <select class="form-select" id="paymentMethod" required>
                                                <option value="">Select Method</option>
                                                <option value="bank_transfer">Bank Transfer</option>
                                                <option value="check">Check</option>
                                                <option value="cash">Cash</option>
                                                <option value="credit_card">Credit Card</option>
                                                <option value="debit_card">Debit Card</option>
                                                <option value="online_payment">Online Payment</option>
                                                <option value="direct_deposit">Direct Deposit</option>
                                                <option value="wire_transfer">Wire Transfer</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="paymentStatus" class="form-label">Payment Status</label>
                                            <select class="form-select" id="paymentStatus">
                                                <option value="pending">Pending</option>
                                                <option value="completed">Completed</option>
                                                <option value="failed">Failed</option>
                                                <option value="cancelled">Cancelled</option>
                                                <option value="processing">Processing</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label for="paymentReference" class="form-label">Reference Number</label>
                                    <input type="text" class="form-control" id="paymentReference" placeholder="Transaction ID, Check #, etc.">
                                </div>
                            </div>
                        </div>

                        <!-- Payment Description -->
                        <div class="card glass mb-4">
                            <div class="card-header">
                                <h6 class="mb-0">Payment Description</h6>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label for="paymentDescription" class="form-label">Description *</label>
                                    <textarea class="form-control" id="paymentDescription" rows="3" required
                                        placeholder="Describe what this payment is for..."></textarea>
                                </div>

                                <div class="mb-3">
                                    <label for="paymentItems" class="form-label">Payment Items (Optional)</label>
                                    <div id="paymentItemsContainer">
                                        <!-- Payment items will be added here dynamically -->
                                    </div>
                                    <button type="button" class="btn btn-sm btn-outline-primary mt-2" id="addPaymentItemBtn">
                                        <i class="fas fa-plus me-1"></i>Add Item
                                    </button>
                                </div>
                            </div>
                        </div>

                        <!-- Tax & Fees -->
                        <div class="card glass mb-4">
                            <div class="card-header">
                                <h6 class="mb-0">Tax & Fees</h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="mb-3">
                                            <label for="taxAmount" class="form-label">Tax Amount</label>
                                            <div class="input-group">
                                                <span class="input-group-text">$</span>
                                                <input type="number" class="form-control" id="taxAmount" step="0.01" value="0">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="mb-3">
                                            <label for="feeAmount" class="form-label">Processing Fee</label>
                                            <div class="input-group">
                                                <span class="input-group-text">$</span>
                                                <input type="number" class="form-control" id="feeAmount" step="0.01" value="0">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="mb-3">
                                            <label class="form-label">Total Amount</label>
                                            <div class="input-group">
                                                <span class="input-group-text">$</span>
                                                <input type="text" class="form-control" id="totalAmount" readonly value="0.00">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Documents & Attachments -->
                        <div class="card glass mb-4">
                            <div class="card-header">
                                <h6 class="mb-0">Documents & Attachments</h6>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label class="form-label">Attached Documents</label>
                                    <div id="paymentDocumentsList">
                                        <div class="document-item d-flex justify-content-between align-items-center p-2 mb-2 bg-light rounded">
                                            <div>
                                                <i class="fas fa-file-invoice text-primary me-2"></i>
                                                <span>Invoice_001.pdf</span>
                                            </div>
                                            <div>
                                                <button class="btn btn-sm btn-outline-primary me-1">
                                                    <i class="fas fa-download"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-danger">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label for="uploadPaymentDocument" class="form-label">Upload Document</label>
                                    <input type="file" class="form-control" id="uploadPaymentDocument">
                                </div>
                            </div>
                        </div>

                        <!-- Notes Section -->
                        <div class="card glass mb-4">
                            <div class="card-header">
                                <h6 class="mb-0">Additional Notes</h6>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label for="paymentNotes" class="form-label">Payment Notes</label>
                                    <textarea class="form-control" id="paymentNotes" rows="3"
                                        placeholder="Add any additional notes about this payment..."></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-danger" id="cancelPaymentBtn" style="display: none;">
                            <i class="fas fa-times me-1"></i>Cancel Payment
                        </button>
                        <button type="button" class="btn btn-warning" id="editPaymentBtn" style="display: none;">
                            <i class="fas fa-edit me-1"></i>Edit
                        </button>
                        <button type="button" class="btn btn-primary" id="savePaymentBtn">
                            <i class="fas fa-save me-1"></i><span id="savePaymentText">Save Payment</span>
                        </button>
                    </div>
                </div>
            </div>
            <script>
                // Payment Management System
                $(document).ready(function () {
                    let currentPaymentData = null;

                    // Add Payment Button
                    $('#addPaymentBtn').click(function () {
                        openPaymentManagement('add', null);
                    });

                    // View Payment Button
                    $(document).on('click', '.view-payment-btn', function () {
                        const paymentId = $(this).data('payment-id');
                        openPaymentManagement('view', paymentId);
                    });

                    // Edit Payment Button
                    $(document).on('click', '.edit-payment-btn', function () {
                        const paymentId = $(this).data('payment-id');
                        openPaymentManagement('edit', paymentId);
                    });

                    // Filter Buttons
                    $('#applyFiltersBtn').click(function () {
                        applyPaymentFilters();
                    });

                    $('#resetFiltersBtn').click(function () {
                        resetPaymentFilters();
                    });

                    // Payment Type Change Handler
                    $('#paymentType').change(function () {
                        updatePartyOptions();
                    });

                    // Amount Calculation
                    $('#paymentAmount, #taxAmount, #feeAmount').on('input', function () {
                        calculateTotalAmount();
                    });

                    // Add Payment Item
                    $('#addPaymentItemBtn').click(function () {
                        addPaymentItem();
                    });

                    // Open Payment Management Modal
                    function openPaymentManagement(actionType, paymentId) {
                        currentPaymentData = { actionType, paymentId };

                        $('#paymentId').val(paymentId || '');
                        $('#paymentActionType').val(actionType);

                        setupPaymentModal(actionType);
                        loadPaymentData(paymentId, actionType);
                        $('#paymentManagementModal').modal('show');
                    }

                    // Setup Payment Modal based on action type
                    function setupPaymentModal(actionType) {
                        const configs = {
                            'add': {
                                title: 'Add New Payment',
                                alert: 'Create a new payment record. Fill in all required information.',
                                alertType: 'info',
                                showCancel: false,
                                showEdit: false,
                                showSave: true,
                                saveText: 'Create Payment',
                                readonly: false
                            },
                            'view': {
                                title: 'View Payment Details',
                                alert: 'Viewing payment information. Click Edit to make changes.',
                                alertType: 'primary',
                                showCancel: true,
                                showEdit: true,
                                showSave: false,
                                saveText: 'Save',
                                readonly: true
                            },
                            'edit': {
                                title: 'Edit Payment',
                                alert: 'Editing payment information. Update the details as needed.',
                                alertType: 'warning',
                                showCancel: false,
                                showEdit: false,
                                showSave: true,
                                saveText: 'Update Payment',
                                readonly: false
                            }
                        };

                        const config = configs[actionType];

                        $('#paymentModalAction').text(config.title);
                        $('#paymentAlertMessage').text(config.alert);
                        $('#paymentModalAlert').removeClass('alert-info alert-primary alert-warning').addClass(`alert-${config.alertType}`);

                        // Show/hide buttons
                        $('#cancelPaymentBtn').toggle(config.showCancel);
                        $('#editPaymentBtn').toggle(config.showEdit);
                        $('#savePaymentBtn').toggle(config.showSave);
                        $('#savePaymentText').text(config.saveText);

                        // Set readonly state
                        setPaymentFormReadonly(config.readonly);

                        // Update party options if adding new payment
                        if (actionType === 'add') {
                            updatePartyOptions();
                        }
                    }

                    // Set form fields readonly state
                    function setPaymentFormReadonly(readonly) {
                        const fields = [
                            '#paymentType', '#paymentCategory', '#paymentFrom', '#paymentTo',
                            '#paymentProject', '#paymentAmount', '#paymentDate', '#paymentMethod',
                            '#paymentStatus', '#paymentReference', '#paymentDescription',
                            '#taxAmount', '#feeAmount', '#paymentNotes', '#uploadPaymentDocument'
                        ];

                        fields.forEach(field => {
                            $(field).prop('readonly', readonly);
                            $(field).prop('disabled', readonly);
                        });

                        // Special handling for buttons
                        $('#addPaymentItemBtn').prop('disabled', readonly);
                    }

                    // Update party options based on payment type
                    function updatePartyOptions() {
                        const paymentType = $('#paymentType').val();
                        const fromSelect = $('#paymentFrom');
                        const toSelect = $('#paymentTo');

                        // Clear existing options
                        fromSelect.empty().append('<option value="">Select Payer</option>');
                        toSelect.empty().append('<option value="">Select Payee</option>');

                        if (!paymentType) return;

                        // Define options based on payment type
                        const options = {
                            'client_to_contractor': {
                                from: [
                                    { value: '1', text: 'Jennifer Martinez' },
                                    { value: '2', text: 'David Thompson' },
                                    { value: '3', text: 'Amanda Roberts' },
                                    { value: '4', text: 'Robert Chen' }
                                ],
                                to: [
                                    { value: '1', text: 'Michael Johnson' },
                                    { value: '2', text: 'Sarah Williams' },
                                    { value: '3', text: 'Robert Chen' },
                                    { value: '4', text: 'Lisa Rodriguez' }
                                ]
                            },
                            'contractor_to_employee': {
                                from: [
                                    { value: '1', text: 'Michael Johnson' },
                                    { value: '2', text: 'Sarah Williams' },
                                    { value: '3', text: 'Robert Chen' }
                                ],
                                to: [
                                    { value: '1', text: 'Michael Johnson' },
                                    { value: '2', text: 'Sarah Williams' },
                                    { value: '3', text: 'Robert Chen' },
                                    { value: '4', text: 'Lisa Rodriguez' }
                                ]
                            },
                            'company_to_contractor': {
                                from: [
                                    { value: 'company', text: 'BuildRight Construction' }
                                ],
                                to: [
                                    { value: '1', text: 'Michael Johnson' },
                                    { value: '2', text: 'Sarah Williams' },
                                    { value: '3', text: 'Robert Chen' }
                                ]
                            },
                            'company_to_employee': {
                                from: [
                                    { value: 'company', text: 'BuildRight Construction' }
                                ],
                                to: [
                                    { value: '1', text: 'Michael Johnson' },
                                    { value: '2', text: 'Sarah Williams' },
                                    { value: '3', text: 'Robert Chen' },
                                    { value: '4', text: 'Lisa Rodriguez' }
                                ]
                            },
                            'refund': {
                                from: [
                                    { value: 'company', text: 'BuildRight Construction' }
                                ],
                                to: [
                                    { value: '1', text: 'Jennifer Martinez' },
                                    { value: '2', text: 'David Thompson' },
                                    { value: '3', text: 'Amanda Roberts' },
                                    { value: '4', text: 'Robert Chen' }
                                ]
                            },
                            'client_to_company': {
                                from: [
                                    { value: '1', text: 'Jennifer Martinez' },
                                    { value: '2', text: 'David Thompson' },
                                    { value: '3', text: 'Amanda Roberts' },
                                    { value: '4', text: 'Robert Chen' }
                                ],
                                to: [
                                    { value: 'company', text: 'BuildRight Construction' }
                                ]
                            }
                        };

                        const typeOptions = options[paymentType];
                        if (typeOptions) {
                            typeOptions.from.forEach(option => {
                                fromSelect.append(`<option value="${option.value}">${option.text}</option>`);
                            });

                            typeOptions.to.forEach(option => {
                                toSelect.append(`<option value="${option.value}">${option.text}</option>`);
                            });
                        }
                    }

                    // Load Payment Data
                    function loadPaymentData(paymentId, actionType) {
                        if (actionType === 'add') {
                            clearPaymentForm();
                            generatePaymentId();
                            return;
                        }

                        // Mock data - replace with API calls
                        const paymentData = {
                            1: {
                                type: 'client_to_contractor',
                                category: 'project_payment',
                                from: '1',
                                to: '1',
                                project: '1',
                                amount: 25000,
                                date: '2024-01-15',
                                method: 'bank_transfer',
                                status: 'completed',
                                reference: 'TRX-001234',
                                description: 'Progress payment for foundation work completion',
                                taxAmount: 1500,
                                feeAmount: 25,
                                notes: 'Payment received on time. Client satisfied with progress.'
                            },
                            2: {
                                type: 'contractor_to_employee',
                                category: 'salary',
                                from: '1',
                                to: '2',
                                project: '1',
                                amount: 5000,
                                date: '2024-01-16',
                                method: 'check',
                                status: 'completed',
                                reference: 'CHK-567890',
                                description: 'Monthly salary payment for project management services',
                                taxAmount: 750,
                                feeAmount: 0,
                                notes: 'Regular salary payment.'
                            },
                            3: {
                                type: 'company_to_contractor',
                                category: 'project_payment',
                                from: 'company',
                                to: '3',
                                project: '2',
                                amount: 15000,
                                date: '2024-01-17',
                                method: 'bank_transfer',
                                status: 'pending',
                                reference: 'TRX-345678',
                                description: 'Advance payment for structural engineering services',
                                taxAmount: 900,
                                feeAmount: 15,
                                notes: 'Awaiting bank confirmation.'
                            },
                            4: {
                                type: 'refund',
                                category: 'other',
                                from: 'company',
                                to: '2',
                                project: '3',
                                amount: 2500,
                                date: '2024-01-18',
                                method: 'credit_card',
                                status: 'completed',
                                reference: 'REF-901234',
                                description: 'Refund for cancelled service',
                                taxAmount: 0,
                                feeAmount: 0,
                                notes: 'Client requested refund due to schedule conflict.'
                            },
                            5: {
                                type: 'company_to_employee',
                                category: 'salary',
                                from: 'company',
                                to: '4',
                                project: '4',
                                amount: 3200,
                                date: '2024-01-19',
                                method: 'direct_deposit',
                                status: 'completed',
                                reference: 'DD-567812',
                                description: 'Bi-weekly salary payment',
                                taxAmount: 480,
                                feeAmount: 0,
                                notes: 'Regular payroll processing.'
                            }
                        };

                        const data = paymentData[paymentId];
                        if (data) {
                            // Fill form fields
                            $('#paymentType').val(data.type);
                            $('#paymentCategory').val(data.category);
                            $('#paymentFrom').val(data.from);
                            $('#paymentTo').val(data.to);
                            $('#paymentProject').val(data.project);
                            $('#paymentAmount').val(data.amount);
                            $('#paymentDate').val(data.date);
                            $('#paymentMethod').val(data.method);
                            $('#paymentStatus').val(data.status);
                            $('#paymentReference').val(data.reference);
                            $('#paymentDescription').val(data.description);
                            $('#taxAmount').val(data.taxAmount);
                            $('#feeAmount').val(data.feeAmount);
                            $('#paymentNotes').val(data.notes);

                            // Calculate total
                            calculateTotalAmount();

                            // Set payment ID
                            $('#paymentId').val(paymentId);
                        }
                    }

                    // Helper functions
                    function clearPaymentForm() {
                        $('#paymentType').val('');
                        $('#paymentCategory').val('project_payment');
                        $('#paymentFrom').val('');
                        $('#paymentTo').val('');
                        $('#paymentProject').val('');
                        $('#paymentAmount').val('');
                        $('#paymentDate').val('');
                        $('#paymentMethod').val('');
                        $('#paymentStatus').val('pending');
                        $('#paymentReference').val('');
                        $('#paymentDescription').val('');
                        $('#taxAmount').val('0');
                        $('#feeAmount').val('0');
                        $('#paymentNotes').val('');
                        $('#paymentItemsContainer').empty();
                        calculateTotalAmount();
                    }

                    function generatePaymentId() {
                        // In real application, this would come from the server
                        const randomId = Math.floor(Math.random() * 1000).toString().padStart(3, '0');
                        return `PAY-${randomId}`;
                    }

                    function calculateTotalAmount() {
                        const amount = parseFloat($('#paymentAmount').val()) || 0;
                        const tax = parseFloat($('#taxAmount').val()) || 0;
                        const fee = parseFloat($('#feeAmount').val()) || 0;
                        const total = amount + tax + fee;
                        $('#totalAmount').val(total.toFixed(2));
                    }

                    function addPaymentItem() {
                        const itemId = Date.now();
                        const itemHtml = `
            <div class="payment-item row mb-2" data-id="${itemId}">
                <div class="col-md-5">
                    <input type="text" class="form-control" placeholder="Item description">
                </div>
                <div class="col-md-3">
                    <input type="number" class="form-control" placeholder="Quantity" value="1">
                </div>
                <div class="col-md-3">
                    <div class="input-group">
                        <span class="input-group-text">$</span>
                        <input type="number" class="form-control" placeholder="Price" step="0.01">
                    </div>
                </div>
                <div class="col-md-1">
                    <button type="button" class="btn btn-sm btn-outline-danger remove-payment-item">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
        `;
                        $('#paymentItemsContainer').append(itemHtml);
                    }

                    // Remove Payment Item
                    $(document).on('click', '.remove-payment-item', function () {
                        $(this).closest('.payment-item').remove();
                    });

                    // Edit Button Click

                    // Edit Button Click Handler
                    $('#editPaymentBtn').click(function () {
                        openPaymentManagement('edit', currentPaymentData.paymentId);
                    });

                    // Save Payment Button
                    $('#savePaymentBtn').click(function () {
                        savePayment();
                    });

                    // Cancel Payment Button
                    $('#cancelPaymentBtn').click(function () {
                        cancelPayment();
                    });

                    // Save Payment Function
                    function savePayment() {
                        if (!validatePaymentForm()) {
                            return;
                        }

                        const paymentData = gatherPaymentData();
                        const actionType = $('#paymentActionType').val();

                        // Simulate API call - replace with actual API
                        simulateAPICall(actionType, paymentData)
                            .then(response => {
                                showNotification('Payment saved successfully!', 'success');
                                $('#paymentManagementModal').modal('hide');
                                refreshPaymentsTable();
                            })
                            .catch(error => {
                                showNotification('Error saving payment: ' + error.message, 'error');
                            });
                    }

                    // Cancel Payment Function
                    function cancelPayment() {
                        const paymentId = $('#paymentId').val();

                        if (confirm('Are you sure you want to cancel this payment? This action cannot be undone.')) {
                            // Simulate API call - replace with actual API
                            simulateCancelPayment(paymentId)
                                .then(response => {
                                    showNotification('Payment cancelled successfully!', 'success');
                                    $('#paymentManagementModal').modal('hide');
                                    refreshPaymentsTable();
                                })
                                .catch(error => {
                                    showNotification('Error cancelling payment: ' + error.message, 'error');
                                });
                        }
                    }

                    // Validate Payment Form
                    function validatePaymentForm() {
                        const requiredFields = [
                            '#paymentType', '#paymentFrom', '#paymentTo',
                            '#paymentAmount', '#paymentDate', '#paymentMethod',
                            '#paymentDescription'
                        ];

                        let isValid = true;
                        let firstInvalidField = null;

                        requiredFields.forEach(field => {
                            const value = $(field).val();
                            if (!value) {
                                isValid = false;
                                if (!firstInvalidField) {
                                    firstInvalidField = field;
                                }
                                $(field).addClass('is-invalid');
                            } else {
                                $(field).removeClass('is-invalid');
                            }
                        });

                        // Validate amount is positive
                        const amount = parseFloat($('#paymentAmount').val());
                        if (amount <= 0) {
                            isValid = false;
                            $('#paymentAmount').addClass('is-invalid');
                            if (!firstInvalidField) firstInvalidField = '#paymentAmount';
                        }

                        if (!isValid && firstInvalidField) {
                            $(firstInvalidField).focus();
                            showNotification('Please fill in all required fields correctly.', 'warning');
                        }

                        return isValid;
                    }

                    // Gather Payment Data from Form
                    function gatherPaymentData() {
                        return {
                            id: $('#paymentId').val(),
                            type: $('#paymentType').val(),
                            category: $('#paymentCategory').val(),
                            from: $('#paymentFrom').val(),
                            to: $('#paymentTo').val(),
                            project: $('#paymentProject').val(),
                            amount: parseFloat($('#paymentAmount').val()),
                            date: $('#paymentDate').val(),
                            method: $('#paymentMethod').val(),
                            status: $('#paymentStatus').val(),
                            reference: $('#paymentReference').val(),
                            description: $('#paymentDescription').val(),
                            taxAmount: parseFloat($('#taxAmount').val()) || 0,
                            feeAmount: parseFloat($('#feeAmount').val()) || 0,
                            totalAmount: parseFloat($('#totalAmount').val()) || 0,
                            notes: $('#paymentNotes').val(),
                            items: gatherPaymentItems()
                        };
                    }

                    // Gather Payment Items
                    function gatherPaymentItems() {
                        const items = [];
                        $('.payment-item').each(function () {
                            const item = {
                                description: $(this).find('input[type="text"]').val(),
                                quantity: parseInt($(this).find('input[type="number"]').eq(0).val()) || 1,
                                price: parseFloat($(this).find('input[type="number"]').eq(1).val()) || 0
                            };
                            if (item.description) {
                                items.push(item);
                            }
                        });
                        return items;
                    }

                    // Apply Payment Filters
                    function applyPaymentFilters() {
                        const typeFilter = $('#paymentTypeFilter').val();
                        const statusFilter = $('#paymentStatusFilter').val();
                        const dateFrom = $('#dateFromFilter').val();
                        const dateTo = $('#dateToFilter').val();

                        $('table.data-table tbody tr').each(function () {
                            let showRow = true;
                            const row = $(this);

                            // Type filter
                            if (typeFilter) {
                                const typeText = row.find('td:nth-child(2) .badge').text().toLowerCase();
                                const typeMapping = {
                                    'client → contractor': 'client_to_contractor',
                                    'contractor → employee': 'contractor_to_employee',
                                    'company → contractor': 'company_to_contractor',
                                    'company → employee': 'company_to_employee',
                                    'refund to client': 'refund'
                                };

                                const rowType = typeMapping[typeText.toLowerCase()];
                                if (rowType !== typeFilter) {
                                    showRow = false;
                                }
                            }

                            // Status filter
                            if (statusFilter && showRow) {
                                const statusText = row.find('.status-badge').text().toLowerCase();
                                if (statusText !== statusFilter.toLowerCase()) {
                                    showRow = false;
                                }
                            }

                            // Date filter
                            if (dateFrom && showRow) {
                                const rowDate = row.find('td:nth-child(7)').text();
                                if (new Date(rowDate) < new Date(dateFrom)) {
                                    showRow = false;
                                }
                            }

                            if (dateTo && showRow) {
                                const rowDate = row.find('td:nth-child(7)').text();
                                if (new Date(rowDate) > new Date(dateTo)) {
                                    showRow = false;
                                }
                            }

                            row.toggle(showRow);
                        });

                        showNotification('Filters applied successfully!', 'success');
                    }

                    // Reset Payment Filters
                    function resetPaymentFilters() {
                        $('#paymentTypeFilter').val('');
                        $('#paymentStatusFilter').val('');
                        $('#dateFromFilter').val('');
                        $('#dateToFilter').val('');

                        $('table.data-table tbody tr').show();
                        showNotification('Filters reset successfully!', 'info');
                    }

                    // Refresh Payments Table
                    function refreshPaymentsTable() {
                        // In a real application, this would reload data from the server
                        // For now, we'll just show a notification
                        console.log('Refreshing payments table...');
                        // You would typically make an API call here to get updated data
                    }

                    // Simulate API Calls
                    function simulateAPICall(actionType, data) {
                        return new Promise((resolve, reject) => {
                            setTimeout(() => {
                                // Simulate random success/failure
                                if (Math.random() > 0.1) { // 90% success rate
                                    console.log(`${actionType} payment:`, data);
                                    resolve({ success: true, data: data });
                                } else {
                                    reject(new Error('Network error or server unavailable'));
                                }
                            }, 1000);
                        });
                    }

                    function simulateCancelPayment(paymentId) {
                        return new Promise((resolve, reject) => {
                            setTimeout(() => {
                                if (Math.random() > 0.1) { // 90% success rate
                                    console.log('Cancelled payment:', paymentId);
                                    resolve({ success: true, paymentId: paymentId });
                                } else {
                                    reject(new Error('Unable to cancel payment'));
                                }
                            }, 1000);
                        });
                    }

                    // Show Notification
                    function showNotification(message, type = 'info') {
                        // You can integrate with a notification library or use browser alerts
                        const alertClass = {
                            'success': 'alert-success',
                            'error': 'alert-danger',
                            'warning': 'alert-warning',
                            'info': 'alert-info'
                        }[type];

                        // Create temporary alert
                        const alert = $(`
            <div class="alert ${alertClass} alert-dismissible fade show position-fixed" 
                 style="top: 20px; right: 20px; z-index: 1060;">
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        `);

                        $('body').append(alert);

                        // Auto remove after 5 seconds
                        setTimeout(() => {
                            alert.alert('close');
                        }, 5000);
                    }

                    // Initialize date fields with current date
                    function initializeDateFields() {
                        const today = new Date().toISOString().split('T')[0];
                        $('#paymentDate').val(today);
                    }

                    // Initialize the payment management system
                    function initializePaymentSystem() {
                        initializeDateFields();
                        console.log('Payment Management System initialized');
                    }

                    // Call initialization when document is ready
                    initializePaymentSystem();
                });
            </script>
        </div>

        <!-- Employee Management Modal -->
        <div class="modal fade" id="employeeManagementModal" tabindex="-1" aria-labelledby="employeeManagementModalLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content glass">
                    <div class="modal-header">
                        <h5 class="modal-title" id="employeeManagementModalLabel">
                            <span id="employeeModalAction">Manage Employee</span>
                        </h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" id="employeeId">
                        <input type="hidden" id="employeeActionType">
                        <!-- add, view, edit -->

                        <!-- Alert Section -->
                        <div class="alert" id="employeeModalAlert">
                            <i class="fas fa-info-circle me-2"></i>
                            <span id="employeeAlertMessage">Managing employee</span>
                        </div>

                        <!-- Employee Photo & Basic Info -->
                        <div class="card glass mb-4">
                            <div class="card-body">
                                <div class="row align-items-center">
                                    <div class="col-md-3 text-center">
                                        <div class="employee-photo-container mb-3">
                                            <img src="https://randomuser.me/api/portraits/men/32.jpg" alt="Employee Photo"
                                                class="rounded-circle" id="employeePhoto" width="120" height="120">
                                            <div class="mt-2">
                                                <button class="btn btn-sm btn-outline-primary" id="changePhotoBtn">
                                                    <i class="fas fa-camera me-1"></i>Change Photo
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-9">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="mb-3">
                                                    <label for="employeeFirstName" class="form-label">First Name *</label>
                                                    <input type="text" class="form-control" id="employeeFirstName" required>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="mb-3">
                                                    <label for="employeeLastName" class="form-label">Last Name *</label>
                                                    <input type="text" class="form-control" id="employeeLastName" required>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="mb-3">
                                                    <label for="employeeEmail" class="form-label">Email Address *</label>
                                                    <input type="email" class="form-control" id="employeeEmail" required>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="mb-3">
                                                    <label for="employeePhone" class="form-label">Phone Number *</label>
                                                    <input type="tel" class="form-control" id="employeePhone" required>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Professional Information -->
                        <div class="card glass mb-4">
                            <div class="card-header">
                                <h6 class="mb-0">Professional Information</h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="employeePosition" class="form-label">Position *</label>
                                            <select class="form-select" id="employeePosition" required>
                                                <option value="">Select Position</option>
                                                <option value="general_contractor">General Contractor</option>
                                                <option value="project_manager">Project Manager</option>
                                                <option value="structural_engineer">Structural Engineer</option>
                                                <option value="architect">Architect</option>
                                                <option value="site_supervisor">Site Supervisor</option>
                                                <option value="foreman">Foreman</option>
                                                <option value="carpenter">Carpenter</option>
                                                <option value="electrician">Electrician</option>
                                                <option value="plumber">Plumber</option>
                                                <option value="laborer">Laborer</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="employeeDepartment" class="form-label">Department *</label>
                                            <select class="form-select" id="employeeDepartment" required>
                                                <option value="">Select Department</option>
                                                <option value="construction">Construction</option>
                                                <option value="management">Management</option>
                                                <option value="engineering">Engineering</option>
                                                <option value="design">Design</option>
                                                <option value="electrical">Electrical</option>
                                                <option value="plumbing">Plumbing</option>
                                                <option value="finishing">Finishing</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="employeeExperience" class="form-label">Years of Experience</label>
                                            <input type="number" class="form-control" id="employeeExperience" min="0"
                                                max="50">
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="employeeSalary" class="form-label">Salary</label>
                                            <div class="input-group">
                                                <span class="input-group-text">$</span>
                                                <input type="number" class="form-control" id="employeeSalary">
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label for="employeeSkills" class="form-label">Skills & Specializations</label>
                                    <select class="form-select" id="employeeSkills" multiple>
                                        <option value="concrete_work">Concrete Work</option>
                                        <option value="framing">Framing</option>
                                        <option value="roofing">Roofing</option>
                                        <option value="electrical_installation">Electrical Installation</option>
                                        <option value="plumbing">Plumbing</option>
                                        <option value="drywall">Drywall</option>
                                        <option value="painting">Painting</option>
                                        <option value="tiling">Tiling</option>
                                        <option value="cabinetry">Cabinetry</option>
                                        <option value="heavy_machinery">Heavy Machinery</option>
                                        <option value="project_management">Project Management</option>
                                        <option value="blueprint_reading">Blueprint Reading</option>
                                    </select>
                                    <div class="form-text">Hold Ctrl to select multiple skills</div>
                                </div>
                            </div>
                        </div>

                        <!-- Employment Details -->
                        <div class="card glass mb-4">
                            <div class="card-header">
                                <h6 class="mb-0">Employment Details</h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="employeeIdNumber" class="form-label">Employee ID</label>
                                            <input type="text" class="form-control" id="employeeIdNumber" readonly>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="employeeJoinDate" class="form-label">Join Date *</label>
                                            <input type="date" class="form-control" id="employeeJoinDate" required>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="employeeStatus" class="form-label">Employment Status</label>
                                            <select class="form-select" id="employeeStatus">
                                                <option value="active">Active</option>
                                                <option value="on_leave">On Leave</option>
                                                <option value="suspended">Suspended</option>
                                                <option value="terminated">Terminated</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="employeeType" class="form-label">Employment Type</label>
                                            <select class="form-select" id="employeeType">
                                                <option value="full_time">Full Time</option>
                                                <option value="part_time">Part Time</option>
                                                <option value="contract">Contract</option>
                                                <option value="seasonal">Seasonal</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Personal Information -->
                        <div class="card glass mb-4">
                            <div class="card-header">
                                <h6 class="mb-0">Personal Information</h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="employeeAddress" class="form-label">Address</label>
                                            <input type="text" class="form-control" id="employeeAddress">
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="employeeCity" class="form-label">City</label>
                                            <input type="text" class="form-control" id="employeeCity">
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="employeeState" class="form-label">State</label>
                                            <input type="text" class="form-control" id="employeeState">
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="employeeZipCode" class="form-label">ZIP Code</label>
                                            <input type="text" class="form-control" id="employeeZipCode">
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="employeeEmergencyContact" class="form-label">
                                                Emergency
                                            Contact</label>
                                            <input type="text" class="form-control" id="employeeEmergencyContact">
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="employeeEmergencyPhone" class="form-label">Emergency Phone</label>
                                            <input type="tel" class="form-control" id="employeeEmergencyPhone">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Documents & Certifications -->
                        <div class="card glass mb-4">
                            <div class="card-header">
                                <h6 class="mb-0">Documents & Certifications</h6>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label class="form-label">Available Documents</label>
                                    <div id="employeeDocumentsList">
                                        <div
                                            class="document-item d-flex justify-content-between align-items-center p-2 mb-2 bg-light rounded">
                                            <div>
                                                <i class="fas fa-file-pdf text-danger me-2"></i>
                                                <span>Employment_Contract.pdf</span>
                                            </div>
                                            <div>
                                                <button class="btn btn-sm btn-outline-primary me-1">
                                                    <i class="fas fa-download"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-danger">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label for="employeeCertifications" class="form-label">Certifications</label>
                                    <select class="form-select" id="employeeCertifications" multiple>
                                        <option value="osha_30">OSHA 30-Hour</option>
                                        <option value="first_aid_cpr">First Aid/CPR</option>
                                        <option value="fall_protection">Fall Protection</option>
                                        <option value="scaffolding">Scaffolding</option>
                                        <option value="excavation">Excavation Safety</option>
                                        <option value="welding_cert">Welding Certification</option>
                                        <option value="electrical_cert">Electrical Certification</option>
                                        <option value="plumbing_license">Plumbing License</option>
                                    </select>
                                    <div class="form-text">Hold Ctrl to select multiple certifications</div>
                                </div>

                                <div class="mb-3">
                                    <label for="uploadDocument" class="form-label">Upload Document</label>
                                    <input type="file" class="form-control" id="uploadDocument">
                                </div>
                            </div>
                        </div>

                        <!-- Notes Section -->
                        <div class="card glass mb-4">
                            <div class="card-header">
                                <h6 class="mb-0">Additional Notes</h6>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label for="employeeNotes" class="form-label">Employee Notes</label>
                                    <textarea class="form-control" id="employeeNotes" rows="3"
                                        placeholder="Add any additional notes about the employee..."></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-danger" id="deactivateEmployeeBtn" style="display: none;">
                            <i class="fas fa-user-slash me-1"></i>Deactivate
                        </button>
                        <button type="button" class="btn btn-warning" id="editEmployeeBtn" style="display: none;">
                            <i class="fas fa-edit me-1"></i>Edit
                        </button>
                        <button type="button" class="btn btn-primary" id="saveEmployeeBtn">
                            <i class="fas fa-save me-1"></i><span id="saveEmployeeText">Save Employee</span>
                        </button>
                    </div>
                </div>
            </div>
            <script>
                // Employee Management System
                $(document).ready(function () {
                    let currentEmployeeData = null;

                    // Add Employee Button
                    $('#addEmployeeBtn').click(function () {
                        openEmployeeManagement('add', null);
                    });

                    // View Employee Button
                    $(document).on('click', '.view-employee-btn', function () {
                        const employeeId = $(this).data('employee-id');
                        openEmployeeManagement('view', employeeId);
                    });

                    // Edit Employee Button
                    $(document).on('click', '.edit-employee-btn', function () {
                        const employeeId = $(this).data('employee-id');
                        openEmployeeManagement('edit', employeeId);
                    });

                    // Message Employee Button
                    $(document).on('click', '.message-employee-btn', function () {
                        const employeeCard = $(this).closest('.employee-card');
                        const employeeName = employeeCard.find('h5').text();
                        alert(`Opening message interface for: ${employeeName}`);
                    });

                    // Open Employee Management Modal
                    function openEmployeeManagement(actionType, employeeId) {
                        currentEmployeeData = { actionType, employeeId };

                        $('#employeeId').val(employeeId || '');
                        $('#employeeActionType').val(actionType);

                        setupEmployeeModal(actionType);
                        loadEmployeeData(employeeId, actionType);
                        $('#employeeManagementModal').modal('show');
                    }

                    // Setup Employee Modal based on action type
                    function setupEmployeeModal(actionType) {
                        const configs = {
                            'add': {
                                title: 'Add New Employee',
                                alert: 'Add a new employee to the system. Fill in all required information.',
                                alertType: 'info',
                                showDeactivate: false,
                                showEdit: false,
                                showSave: true,
                                saveText: 'Create Employee',
                                readonly: false
                            },
                            'view': {
                                title: 'View Employee Details',
                                alert: 'Viewing employee information. Click Edit to make changes.',
                                alertType: 'primary',
                                showDeactivate: true,
                                showEdit: true,
                                showSave: false,
                                saveText: 'Save',
                                readonly: true
                            },
                            'edit': {
                                title: 'Edit Employee',
                                alert: 'Editing employee information. Update the details as needed.',
                                alertType: 'warning',
                                showDeactivate: false,
                                showEdit: false,
                                showSave: true,
                                saveText: 'Update Employee',
                                readonly: false
                            }
                        };

                        const config = configs[actionType];

                        $('#employeeModalAction').text(config.title);
                        $('#employeeAlertMessage').text(config.alert);
                        $('#employeeModalAlert').removeClass('alert-info alert-primary alert-warning').addClass(`alert-${config.alertType}`);

                        // Show/hide buttons
                        $('#deactivateEmployeeBtn').toggle(config.showDeactivate);
                        $('#editEmployeeBtn').toggle(config.showEdit);
                        $('#saveEmployeeBtn').toggle(config.showSave);
                        $('#saveEmployeeText').text(config.saveText);

                        // Set readonly state
                        setFormReadonly(config.readonly);
                    }

                    // Set form fields readonly state
                    function setFormReadonly(readonly) {
                        const fields = [
                            '#employeeFirstName', '#employeeLastName', '#employeeEmail', '#employeePhone',
                            '#employeePosition', '#employeeDepartment', '#employeeExperience', '#employeeSalary',
                            '#employeeSkills', '#employeeJoinDate', '#employeeStatus', '#employeeType',
                            '#employeeAddress', '#employeeCity', '#employeeState', '#employeeZipCode',
                            '#employeeEmergencyContact', '#employeeEmergencyPhone', '#employeeCertifications',
                            '#employeeNotes', '#uploadDocument'
                        ];

                        fields.forEach(field => {
                            $(field).prop('readonly', readonly);
                            $(field).prop('disabled', readonly);
                        });

                        // Special handling for select multiple
                        if (readonly) {
                            $('#employeeSkills, #employeeCertifications').prop('disabled', true);
                        }
                    }

                    // Load Employee Data
                    function loadEmployeeData(employeeId, actionType) {
                        if (actionType === 'add') {
                            clearEmployeeForm();
                            generateEmployeeId();
                            return;
                        }

                        // Mock data - replace with API calls
                        const employeeData = {
                            1: {
                                firstName: 'Michael',
                                lastName: 'Johnson',
                                email: 'michael@buildright.com',
                                phone: '(555) 111-2222',
                                position: 'general_contractor',
                                department: 'construction',
                                experience: 5,
                                salary: 75000,
                                skills: ['concrete_work', 'framing', 'heavy_machinery'],
                                joinDate: '2022-03-15',
                                status: 'active',
                                employmentType: 'full_time',
                                address: '123 Construction Ave',
                                city: 'Building City',
                                state: 'CA',
                                zipCode: '12345',
                                emergencyContact: 'Mary Johnson',
                                emergencyPhone: '(555) 999-8888',
                                certifications: ['osha_30', 'first_aid_cpr'],
                                notes: 'Excellent leadership skills. Specializes in residential projects.',
                                photo: 'men/32'
                            },
                            2: {
                                firstName: 'Sarah',
                                lastName: 'Williams',
                                email: 'sarah@buildright.com',
                                phone: '(555) 333-4444',
                                position: 'project_manager',
                                department: 'management',
                                experience: 8,
                                salary: 85000,
                                skills: ['project_management', 'blueprint_reading'],
                                joinDate: '2021-06-10',
                                status: 'active',
                                employmentType: 'full_time',
                                address: '456 Manager St',
                                city: 'Metro City',
                                state: 'NY',
                                zipCode: '67890',
                                emergencyContact: 'John Williams',
                                emergencyPhone: '(555) 777-6666',
                                certifications: ['osha_30', 'first_aid_cpr'],
                                notes: 'Strong project management background. PMP certified.',
                                photo: 'women/44'
                            },
                            3: {
                                firstName: 'Robert',
                                lastName: 'Chen',
                                email: 'robert@buildright.com',
                                phone: '(555) 555-6666',
                                position: 'structural_engineer',
                                department: 'engineering',
                                experience: 6,
                                salary: 80000,
                                skills: ['blueprint_reading'],
                                joinDate: '2022-08-22',
                                status: 'active',
                                employmentType: 'full_time',
                                address: '789 Engineer Lane',
                                city: 'Tech Town',
                                state: 'TX',
                                zipCode: '54321',
                                emergencyContact: 'Lisa Chen',
                                emergencyPhone: '(555) 444-3333',
                                certifications: ['osha_30'],
                                notes: 'Expert in structural analysis and design.',
                                photo: 'men/76'
                            },
                            4: {
                                firstName: 'Lisa',
                                lastName: 'Rodriguez',
                                email: 'lisa@buildright.com',
                                phone: '(555) 777-8888',
                                position: 'architect',
                                department: 'design',
                                experience: 7,
                                salary: 78000,
                                skills: ['blueprint_reading'],
                                joinDate: '2023-01-15',
                                status: 'on_leave',
                                employmentType: 'full_time',
                                address: '321 Design Blvd',
                                city: 'Creative City',
                                state: 'FL',
                                zipCode: '98765',
                                emergencyContact: 'Carlos Rodriguez',
                                emergencyPhone: '(555) 222-1111',
                                certifications: [],
                                notes: 'Creative architect with modern design approach.',
                                photo: 'women/68'
                            }
                        };

                        const data = employeeData[employeeId];
                        if (data) {
                            // Fill form fields
                            $('#employeeFirstName').val(data.firstName);
                            $('#employeeLastName').val(data.lastName);
                            $('#employeeEmail').val(data.email);
                            $('#employeePhone').val(data.phone);
                            $('#employeePosition').val(data.position);
                            $('#employeeDepartment').val(data.department);
                            $('#employeeExperience').val(data.experience);
                            $('#employeeSalary').val(data.salary);
                            $('#employeeSkills').val(data.skills);
                            $('#employeeJoinDate').val(data.joinDate);
                            $('#employeeStatus').val(data.status);
                            $('#employeeType').val(data.employmentType);
                            $('#employeeAddress').val(data.address);
                            $('#employeeCity').val(data.city);
                            $('#employeeState').val(data.state);
                            $('#employeeZipCode').val(data.zipCode);
                            $('#employeeEmergencyContact').val(data.emergencyContact);
                            $('#employeeEmergencyPhone').val(data.emergencyPhone);
                            $('#employeeCertifications').val(data.certifications);
                            $('#employeeNotes').val(data.notes);

                            // Set employee ID
                            $('#employeeIdNumber').val(`EMP-00${employeeId}`);

                            // Set employee photo
                            $('#employeePhoto').attr('src', `https://randomuser.me/api/portraits/${data.photo}.jpg`);
                        }
                    }

                    // Helper functions
                    function clearEmployeeForm() {
                        $('#employeeFirstName').val('');
                        $('#employeeLastName').val('');
                        $('#employeeEmail').val('');
                        $('#employeePhone').val('');
                        $('#employeePosition').val('');
                        $('#employeeDepartment').val('');
                        $('#employeeExperience').val('');
                        $('#employeeSalary').val('');
                        $('#employeeSkills').val('');
                        $('#employeeJoinDate').val('');
                        $('#employeeStatus').val('active');
                        $('#employeeType').val('full_time');
                        $('#employeeAddress').val('');
                        $('#employeeCity').val('');
                        $('#employeeState').val('');
                        $('#employeeZipCode').val('');
                        $('#employeeEmergencyContact').val('');
                        $('#employeeEmergencyPhone').val('');
                        $('#employeeCertifications').val('');
                        $('#employeeNotes').val('');
                        $('#employeePhoto').attr('src', 'https://randomuser.me/api/portraits/men/0.jpg');
                    }

                    function generateEmployeeId() {
                        const randomId = Math.floor(Math.random() * 1000).toString().padStart(3, '0');
                        $('#employeeIdNumber').val(`EMP-${randomId}`);
                    }

                    // Edit Button Click
                    $('#editEmployeeBtn').click(function () {
                        const employeeId = $('#employeeId').val();
                        openEmployeeManagement('edit', employeeId);
                    });

                    // Save Employee Button
                    $('#saveEmployeeBtn').click(function () {
                        if (validateEmployeeForm()) {
                            saveEmployee();
                        }
                    });

                    // Deactivate Employee Button
                    $('#deactivateEmployeeBtn').click(function () {
                        if (confirm('Are you sure you want to deactivate this employee?')) {
                            deactivateEmployee();
                        }
                    });

                    // Change Photo Button
                    $('#changePhotoBtn').click(function () {
                        // In a real application, this would open a file picker
                        alert('Photo upload functionality would be implemented here');
                    });

                    // Validation function
                    function validateEmployeeForm() {
                        const required = [
                            '#employeeFirstName', '#employeeLastName', '#employeeEmail',
                            '#employeePhone', '#employeePosition', '#employeeDepartment',
                            '#employeeJoinDate'
                        ];
                        let valid = true;

                        required.forEach(field => {
                            if (!$(field).val().trim()) {
                                valid = false;
                                $(field).addClass('is-invalid');
                            } else {
                                $(field).removeClass('is-invalid');
                            }
                        });

                        // Email validation
                        const email = $('#employeeEmail').val();
                        if (email && !isValidEmail(email)) {
                            valid = false;
                            $('#employeeEmail').addClass('is-invalid');
                        }

                        return valid;
                    }

                    function isValidEmail(email) {
                        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                        return emailRegex.test(email);
                    }

                    // Action functions
                    function saveEmployee() {
                        const actionType = $('#employeeActionType').val();
                        const employeeData = gatherEmployeeData();

                        console.log(`${actionType} employee:`, employeeData);
                        showAlert(`Employee ${actionType === 'add' ? 'created' : 'updated'} successfully!`, 'success');
                        $('#employeeManagementModal').modal('hide');

                        // In real application, refresh the employee list
                    }

                    function deactivateEmployee() {
                        const employeeId = $('#employeeId').val();
                        console.log('Deactivating employee:', employeeId);
                        showAlert('Employee deactivated successfully.', 'info');
                        $('#employeeManagementModal').modal('hide');
                    }

                    function gatherEmployeeData() {
                        return {
                            id: $('#employeeId').val(),
                            actionType: $('#employeeActionType').val(),
                            firstName: $('#employeeFirstName').val(),
                            lastName: $('#employeeLastName').val(),
                            email: $('#employeeEmail').val(),
                            phone: $('#employeePhone').val(),
                            position: $('#employeePosition').val(),
                            department: $('#employeeDepartment').val(),
                            experience: $('#employeeExperience').val(),
                            salary: $('#employeeSalary').val(),
                            skills: $('#employeeSkills').val(),
                            joinDate: $('#employeeJoinDate').val(),
                            status: $('#employeeStatus').val(),
                            employmentType: $('#employeeType').val(),
                            address: $('#employeeAddress').val(),
                            city: $('#employeeCity').val(),
                            state: $('#employeeState').val(),
                            zipCode: $('#employeeZipCode').val(),
                            emergencyContact: $('#employeeEmergencyContact').val(),
                            emergencyPhone: $('#employeeEmergencyPhone').val(),
                            certifications: $('#employeeCertifications').val(),
                            notes: $('#employeeNotes').val()
                        };
                    }

                    // Global alert function
                    function showAlert(message, type) {
                        const alertClass = {
                            'success': 'alert-success',
                            'error': 'alert-danger',
                            'warning': 'alert-warning',
                            'info': 'alert-info'
                        }[type] || 'alert-info';

                        const alertHtml = `
            <div class="alert ${alertClass} alert-dismissible fade show position-fixed top-0 end-0 m-3" style="z-index: 1060;">
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        `;

                        $('body').append(alertHtml);

                        setTimeout(() => {
                            $('.alert').alert('close');
                        }, 5000);
                    }
                });
            </script>

            <style>
                /* Employee Management Styles */
                .employee-card {
                    transition: transform 0.3s ease, box-shadow 0.3s ease;
                }

                    .employee-card:hover {
                        transform: translateY(-5px);
                        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
                    }

                .employee-photo-container {
                    position: relative;
                }

                    .employee-photo-container img {
                        border: 3px solid var(--primary-color);
                    }

                .document-item {
                    background: rgba(255, 255, 255, 0.05);
                    border-radius: 8px;
                    padding: 0.75rem;
                    margin-bottom: 0.5rem;
                }

                /* Status badges */
                .badge.bg-success {
                    background: rgba(46, 204, 113, 0.2) !important;
                    color: var(--success-color) !important;
                }

                .badge.bg-warning {
                    background: rgba(243, 156, 18, 0.2) !important;
                    color: var(--warning-color) !important;
                }

                .badge.bg-danger {
                    background: rgba(231, 76, 60, 0.2) !important;
                    color: var(--danger-color) !important;
                }

                /* Table enhancements */
                .data-table img {
                    border: 2px solid var(--glass-border);
                }

                .data-table .action-btn {
                    margin: 0 2px;
                }

                /* Form styling */
                .form-label {
                    font-weight: 600;
                    color: var(--dark-color);
                    margin-bottom: 0.5rem;
                }

                .form-control:read-only {
                    background: rgba(255, 255, 255, 0.05);
                    border-color: var(--glass-border);
                    color: var(--dark-color);
                }

                .form-control:disabled {
                    background: rgba(255, 255, 255, 0.02);
                    border-color: var(--glass-border);
                    color: var(--dark-color);
                    opacity: 0.7;
                }
            </style>
        </div>



        <!-- Project Management Modal -->
        <div class="modal fade" id="projectManagementModal" tabindex="-1" aria-labelledby="projectManagementModalLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-xl">
                <div class="modal-content glass">
                    <div class="modal-header">
                        <h5 class="modal-title" id="projectManagementModalLabel">
                            <span id="managementModalAction">Manage Project</span>
                        </h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" id="managementProjectId">
                        <input type="hidden" id="managementActionType">

                        <!-- Alert Section -->
                        <div class="alert" id="managementModalAlert">
                            <i class="fas fa-info-circle me-2"></i>
                            <span id="managementAlertMessage">Managing project</span>
                        </div>

                        <!-- Client Verification Section (For New Projects) -->
                        <div class="card glass mb-4" id="clientVerificationSection">
                            <div class="card-header bg-warning text-dark">
                                <h6 class="mb-0">
                                    <i class="fas fa-shield-alt me-2"></i>Client Verification Required
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="info-group">
                                            <label>Client Name:</label>
                                            <span id="verifyClientName">-</span>
                                        </div>
                                        <div class="info-group">
                                            <label>Email:</label>
                                            <span id="verifyClientEmail">-</span>
                                        </div>
                                        <div class="info-group">
                                            <label>Phone:</label>
                                            <span id="verifyClientPhone">-</span>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="info-group">
                                            <label>Client Type:</label>
                                            <span id="verifyClientType">-</span>
                                        </div>
                                        <div class="info-group">
                                            <label>Status:</label>
                                            <span id="verifyClientStatus">-</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="verification-checklist mt-3">
                                    <div class="form-check">
                                        <input class="form-check-input verification-check" type="checkbox"
                                            id="verifyClientIdentity">
                                        <label class="form-check-label" for="verifyClientIdentity">
                                            Client identity verified and validated
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Project Basic Information -->
                        <div class="card glass mb-4">
                            <div class="card-header">
                                <h6 class="mb-0">Project Basic Information</h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="projectName" class="form-label">Project Name *</label>
                                            <input type="text" class="form-control" id="projectName" required>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="projectType" class="form-label">Project Type *</label>
                                            <select class="form-select" id="projectType" required>
                                                <option value="residential">Residential</option>
                                                <option value="commercial">Commercial</option>
                                                <option value="industrial">Industrial</option>
                                                <option value="renovation">Renovation</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="projectClient" class="form-label">Client *</label>
                                            <select class="form-select" id="projectClient" required>
                                                <option value="">Select Client</option>
                                                <option value="1">Jennifer Martinez</option>
                                                <option value="2">David Thompson</option>
                                                <option value="3">Amanda Roberts</option>
                                                <option value="4">Robert Chen</option>
                                                <option value="new">+ Add New Client</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="projectBudget" class="form-label">Budget *</label>
                                            <div class="input-group">
                                                <span class="input-group-text">$</span>
                                                <input type="number" class="form-control" id="projectBudget" required>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="projectStartDate" class="form-label">Start Date *</label>
                                            <input type="date" class="form-control" id="projectStartDate" required>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="projectDeadline" class="form-label">Deadline *</label>
                                            <input type="date" class="form-control" id="projectDeadline" required>
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label for="projectDescription" class="form-label">Project Description *</label>
                                    <textarea class="form-control" id="projectDescription" rows="3" required></textarea>
                                </div>
                            </div>
                        </div>

                        <!-- Project Progress & Status -->
                        <div class="card glass mb-4">
                            <div class="card-header">
                                <h6 class="mb-0">Project Progress & Status</h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="projectStatus" class="form-label">Project Status</label>
                                            <select class="form-select" id="projectStatus">
                                                <option value="planning">Planning</option>
                                                <option value="active">Active</option>
                                                <option value="on_hold">On Hold</option>
                                                <option value="completed">Completed</option>
                                                <option value="cancelled">Cancelled</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="projectProgress" class="form-label">Progress Percentage</label>
                                            <input type="range" class="form-range" id="projectProgress" min="0" max="100"
                                                value="0">
                                            <div class="d-flex justify-content-between">
                                                <small>0%</small>
                                                <small id="progressPercentageText">0%</small>
                                                <small>100%</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label for="progressNotes" class="form-label">Progress Notes</label>
                                    <textarea class="form-control" id="progressNotes" rows="2"
                                        placeholder="Add progress updates..."></textarea>
                                </div>
                            </div>
                        </div>

                        <!-- Project Team & Resources -->
                        <div class="card glass mb-4">
                            <div class="card-header">
                                <h6 class="mb-0">Project Team & Resources</h6>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label for="projectManager" class="form-label">Project Manager</label>
                                    <select class="form-select" id="projectManager">
                                        <option value="">Select Project Manager</option>
                                        <option value="1">Sarah Williams</option>
                                        <option value="2">Michael Johnson</option>
                                        <option value="3">Robert Chen</option>
                                    </select>
                                </div>

                                <div class="mb-3">
                                    <label for="assignedTeam" class="form-label">Assigned Team Members</label>
                                    <select class="form-select" id="assignedTeam" multiple>
                                        <option value="1">Michael Johnson - General Contractor</option>
                                        <option value="2">Sarah Williams - Project Manager</option>
                                        <option value="3">Robert Chen - Structural Engineer</option>
                                        <option value="4">David Kim - Architect</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <!-- Project Milestones -->
                        <div class="card glass mb-4">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h6 class="mb-0">Project Milestones</h6>
                                <button type="button" class="btn btn-sm btn-primary" id="addMilestoneBtn">
                                    <i class="fas fa-plus me-1"></i>Add Milestone
                                </button>
                            </div>
                            <div class="card-body">
                                <div id="milestonesContainer">
                                    <!-- Milestones will be added here dynamically -->
                                </div>
                            </div>
                        </div>

                        <!-- Project Assessment (For Review) -->
                        <div class="card glass mb-4" id="projectAssessmentSection">
                            <div class="card-header">
                                <h6 class="mb-0">Project Assessment</h6>
                            </div>
                            <div class="card-body">
                                <div class="assessment-checklist">
                                    <div class="form-check mb-2">
                                        <input class="form-check-input assessment-check" type="checkbox" id="assessScope">
                                        <label class="form-check-label" for="assessScope">
                                            Project scope is clearly defined
                                        </label>
                                    </div>
                                    <div class="form-check mb-2">
                                        <input class="form-check-input assessment-check" type="checkbox" id="assessBudget">
                                        <label class="form-check-label" for="assessBudget">
                                            Budget is realistic and approved
                                        </label>
                                    </div>
                                    <div class="form-check mb-2">
                                        <input class="form-check-input assessment-check" type="checkbox"
                                            id="assessTimeline">
                                        <label class="form-check-label" for="assessTimeline">
                                            Timeline is achievable
                                        </label>
                                    </div>
                                    <div class="form-check mb-2">
                                        <input class="form-check-input assessment-check" type="checkbox"
                                            id="assessResources">
                                        <label class="form-check-label" for="assessResources">
                                            Required resources are available
                                        </label>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label for="assessmentNotes" class="form-label">Assessment Notes</label>
                                    <textarea class="form-control" id="assessmentNotes" rows="3"
                                        placeholder="Add assessment notes..."></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>

                        <!-- Reject Button (For Review) -->
                        <button type="button" class="btn btn-danger" id="rejectProjectBtn">
                            <i class="fas fa-times me-1"></i>Reject
                        </button>

                        <!-- Save/Update Button -->
                        <button type="button" class="btn btn-primary" id="saveProjectBtn">
                            <i class="fas fa-save me-1"></i><span id="saveButtonText">Save Project</span>
                        </button>

                        <!-- Approve Button (For Review) -->
                        <button type="button" class="btn btn-success" id="approveProjectBtn">
                            <i class="fas fa-check me-1"></i>Approve Project
                        </button>
                    </div>
                </div>
            </div>
        </div>


        <!-- Project Details View Modal -->
        <div class="modal fade" id="projectDetailsModal" tabindex="-1" aria-labelledby="projectDetailsModalLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content glass">
                    <div class="modal-header">
                        <h5 class="modal-title" id="projectDetailsModalLabel">Project Details</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row mb-4">
                            <div class="col-md-8">
                                <h4 id="detailProjectName">Hilltop Residence</h4>
                                <p class="text-muted" id="detailProjectDescription">
                                    A contemporary 4-bedroom home with
                                sustainable features and panoramic views.
                                </p>
                            </div>
                            <div class="col-md-4 text-end">
                                <span class="status-badge status-completed" id="detailProjectStatus">Completed</span>
                                <div class="mt-2">
                                    <small class="text-muted">Progress: <span id="detailProjectProgress">100%</span></small>
                                </div>
                            </div>
                        </div>

                        <div class="row mb-4">
                            <div class="col-md-3">
                                <div class="detail-item">
                                    <h6>Client</h6>
                                    <p id="detailClient">Jennifer Martinez</p>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="detail-item">
                                    <h6>Type</h6>
                                    <p id="detailType">Residential</p>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="detail-item">
                                    <h6>Budget</h6>
                                    <p id="detailBudget">$350,000</p>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="detail-item">
                                    <h6>Project Manager</h6>
                                    <p id="detailManager">Sarah Williams</p>
                                </div>
                            </div>
                        </div>

                        <div class="row mb-4">
                            <div class="col-md-6">
                                <div class="detail-item">
                                    <h6>Timeline</h6>
                                    <p id="detailTimeline">15 Mar 2023 - 15 Sep 2023</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="detail-item">
                                    <h6>Duration</h6>
                                    <p id="detailDuration">6 months</p>
                                </div>
                            </div>
                        </div>

                        <div class="mb-4">
                            <h6>Project Progress</h6>
                            <div class="progress mb-2" style="height: 12px;">
                                <div class="progress-bar bg-success" id="detailProgressBar" style="width: 100%"></div>
                            </div>
                            <div class="d-flex justify-content-between">
                                <small>Start: <span id="detailStartDate">15 Mar 2023</span></small>
                                <small>Deadline: <span id="detailDeadline">15 Sep 2023</span></small>
                            </div>
                        </div>

                        <div class="row mb-4">
                            <div class="col-md-6">
                                <h6>Assigned Team</h6>
                                <div id="detailTeamMembers">
                                    <div class="team-member-small mb-2">
                                        <i class="fas fa-user me-2 text-primary"></i>
                                        <span>Sarah Williams</span>
                                        <small class="text-muted ms-2">(Project Manager)</small>
                                    </div>
                                    <div class="team-member-small mb-2">
                                        <i class="fas fa-user me-2 text-primary"></i>
                                        <span>Michael Johnson</span>
                                        <small class="text-muted ms-2">(General Contractor)</small>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <h6>Key Milestones</h6>
                                <div id="detailMilestones">
                                    <div class="milestone-small completed mb-2">
                                        <i class="fas fa-check-circle me-2 text-success"></i>
                                        <span>Planning Complete</span>
                                        <small class="text-muted ms-2">(Apr 15, 2023)</small>
                                    </div>
                                    <div class="milestone-small completed mb-2">
                                        <i class="fas fa-check-circle me-2 text-success"></i>
                                        <span>Foundation Work</span>
                                        <small class="text-muted ms-2">(May 30, 2023)</small>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="mb-4">
                            <h6>Recent Updates</h6>
                            <div class="updates-timeline">
                                <div class="update-item">
                                    <div class="update-date">Sep 10, 2023</div>
                                    <div class="update-content">
                                        Final inspection completed. Project is ready for handover.
                                    </div>
                                    <div class="update-author">- Sarah Williams</div>
                                </div>
                                <div class="update-item">
                                    <div class="update-date">Sep 5, 2023</div>
                                    <div class="update-content">Landscaping and exterior finishing work completed.</div>
                                    <div class="update-author">- Michael Johnson</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" id="editProjectFromDetails">
                            <i class="fas fa-edit me-1"></i>Edit Project
                        </button>
                    </div>
                </div>
            </div>

            <script>
                // Project Management System
                $(document).ready(function () {
                    let currentProjectData = null;

                    // View New Projects Button
                    $('#viewNewProjectsBtn').click(function () {
                        $('#newProjectsSection').slideToggle();
                       // loadNewProjects();
                    });

                    // Add Project Button
                    $('#addProjectBtn').click(function () {
                        openProjectManagement('add', null);
                    });

                    // Manage Project Button (Review/Update)
                    $(document).on('click', '.manage-project-btn', function () {
                        $('#newProjectsSection').slideToggle();

                        //const projectId = $(this).data('project-id');
                        //const actionType = $(this).data('action-type');
                        //openProjectManagement(actionType, projectId);
                    });

                    // View Project Button
                    $(document).on('click', '.view-project-btn', function () {
                        const projectId = $(this).data('project-id');
                        openProjectDetails(projectId);
                    });

                    // Edit Project from Details Modal
                    $(document).on('click', '#editProjectFromDetails', function () {
                        const projectId = $('#projectDetailsModal').data('project-id');
                        $('#projectDetailsModal').modal('hide');
                        openProjectManagement('update', projectId);
                    });

                    // Progress Slider
                    $('#projectProgress').on('input', function () {
                        $('#progressPercentageText').text($(this).val() + '%');
                    });

                    // Add Milestone Button
                    $('#addMilestoneBtn').click(function () {
                        addMilestoneField();
                    });

                    // Remove Milestone
                    $(document).on('click', '.remove-milestone', function () {
                        $(this).closest('.milestone-field').remove();
                    });

                    // Action Buttons
                    $('#approveProjectBtn').click(function () {
                        if (validateProjectApproval()) {
                            approveProject();
                        } else {
                            alert('Please complete all verification and assessment checks before approving.');
                        }
                    });

                    $('#rejectProjectBtn').click(function () {
                        if (confirm('Are you sure you want to reject this project?')) {
                            rejectProject();
                        }
                    });

                    $('#saveProjectBtn').click(function () {
                        if (validateProjectForm()) {
                            saveProject();
                        }
                    });

                    // Open Project Management Modal
                    function openProjectManagement(actionType, projectId) {
                        currentProjectData = { actionType, projectId };

                        $('#managementProjectId').val(projectId || '');
                        $('#managementActionType').val(actionType);

                        setupManagementModal(actionType);
                        loadProjectData(projectId, actionType);
                        $('#projectManagementModal').modal('show');
                    }

                    // Open Project Details Modal
                    function openProjectDetails(projectId) {
                        loadProjectDetails(projectId);
                        $('#projectDetailsModal').data('project-id', projectId);
                        $('#projectDetailsModal').modal('show');
                    }

                    // Setup Management Modal based on action type
                    function setupManagementModal(actionType) {
                        const configs = {
                            'review': {
                                title: 'Review Project Request',
                                alert: 'Reviewing new project request. Verify client and assess project feasibility.',
                                alertType: 'warning',
                                showVerification: true,
                                showAssessment: true,
                                showReject: true,
                                showApprove: true,
                                showSave: false,
                                saveText: 'Save'
                            },
                            'add': {
                                title: 'Add New Project',
                                alert: 'Create a new project. All fields are required.',
                                alertType: 'info',
                                showVerification: false,
                                showAssessment: false,
                                showReject: false,
                                showApprove: false,
                                showSave: true,
                                saveText: 'Create Project'
                            },
                            'update': {
                                title: 'Update Project',
                                alert: 'Update project details, progress, and milestones.',
                                alertType: 'primary',
                                showVerification: false,
                                showAssessment: false,
                                showReject: false,
                                showApprove: false,
                                showSave: true,
                                saveText: 'Update Project'
                            }
                        };

                        const config = configs[actionType];

                        $('#managementModalAction').text(config.title);
                        $('#managementAlertMessage').text(config.alert);
                        $('#managementModalAlert').removeClass('alert-warning alert-info alert-primary').addClass(`alert-${config.alertType}`);

                        // Show/hide sections
                        $('#clientVerificationSection').toggle(config.showVerification);
                        $('#projectAssessmentSection').toggle(config.showAssessment);

                        // Show/hide buttons
                        $('#rejectProjectBtn').toggle(config.showReject);
                        $('#approveProjectBtn').toggle(config.showApprove);
                        $('#saveProjectBtn').toggle(config.showSave);
                        $('#saveButtonText').text(config.saveText);
                    }

                    // Load Project Data
                    function loadProjectData(projectId, actionType) {
                        if (actionType === 'add') {
                            clearProjectForm();
                            return;
                        }

                        // Mock data
                        const projectData = {
                            // Review projects
                            1: {
                                name: 'Garage Addition',
                                type: 'renovation',
                                client: '1',
                                budget: '45000',
                                startDate: '2024-02-01',
                                deadline: '2024-04-30',
                                description: 'Want to add a 2-car garage with storage space and workshop area.',
                                status: 'planning',
                                progress: 0,
                                manager: '2',
                                team: ['1', '2'],
                                clientInfo: {
                                    name: 'Jennifer Martinez',
                                    email: 'jennifer@email.com',
                                    phone: '(555) 111-2222',
                                    type: 'Residential',
                                    status: 'Existing Client'
                                }
                            },
                            2: {
                                name: 'Modern Office Setup',
                                type: 'commercial',
                                client: 'new',
                                budget: '75000',
                                startDate: '2024-02-15',
                                deadline: '2024-05-30',
                                description: 'Complete office renovation with modern open layout.',
                                status: 'planning',
                                progress: 0,
                                manager: '1',
                                team: ['1'],
                                clientInfo: {
                                    name: 'John Smith',
                                    email: 'john.smith@email.com',
                                    phone: '(555) 123-4567',
                                    type: 'Commercial',
                                    status: 'New Client - Needs Verification'
                                }
                            },
                            // Update projects
                            101: {
                                name: 'Hilltop Residence',
                                type: 'residential',
                                client: '1',
                                budget: '350000',
                                startDate: '2023-03-15',
                                deadline: '2023-09-15',
                                description: 'A contemporary 4-bedroom home with sustainable features and panoramic views.',
                                status: 'completed',
                                progress: 100,
                                manager: '1',
                                team: ['1', '2'],
                                milestones: [
                                    { name: 'Planning Complete', due: '2023-04-15' },
                                    { name: 'Foundation Work', due: '2023-05-30' }
                                ]
                            },
                            102: {
                                name: 'Downtown Plaza',
                                type: 'commercial',
                                client: '2',
                                budget: '1200000',
                                startDate: '2023-05-01',
                                deadline: '2023-12-30',
                                description: 'Mixed-use commercial development with retail and office spaces.',
                                status: 'active',
                                progress: 75,
                                manager: '1',
                                team: ['1', '3'],
                                milestones: [
                                    { name: 'Design Approval', due: '2023-04-15' },
                                    { name: 'Construction Start', due: '2023-05-01' },
                                    { name: 'Exterior Complete', due: '2023-10-15' }
                                ]
                            }
                        };

                        const data = projectData[projectId];
                        if (data) {
                            // Fill form fields
                            $('#projectName').val(data.name);
                            $('#projectType').val(data.type);
                            $('#projectClient').val(data.client);
                            $('#projectBudget').val(data.budget);
                            $('#projectStartDate').val(data.startDate);
                            $('#projectDeadline').val(data.deadline);
                            $('#projectDescription').val(data.description);
                            $('#projectStatus').val(data.status);
                            $('#projectProgress').val(data.progress);
                            $('#progressPercentageText').text(data.progress + '%');
                            $('#projectManager').val(data.manager);
                            $('#assignedTeam').val(data.team);

                            // Load client verification info for review
                            if (actionType === 'review' && data.clientInfo) {
                                $('#verifyClientName').text(data.clientInfo.name);
                                $('#verifyClientEmail').text(data.clientInfo.email);
                                $('#verifyClientPhone').text(data.clientInfo.phone);
                                $('#verifyClientType').text(data.clientInfo.type);
                                $('#verifyClientStatus').text(data.clientInfo.status);
                            }

                            // Load milestones
                            if (data.milestones) {
                                loadMilestones(data.milestones);
                            }
                        }
                    }

                    // Load Project Details
                    function loadProjectDetails(projectId) {
                        const detailsData = {
                            101: {
                                name: 'Hilltop Residence',
                                description: 'A contemporary 4-bedroom home with sustainable features and panoramic views.',
                                status: 'Completed',
                                progress: '100%',
                                client: 'Jennifer Martinez',
                                type: 'Residential',
                                budget: '$350,000',
                                manager: 'Sarah Williams',
                                timeline: '15 Mar 2023 - 15 Sep 2023',
                                duration: '6 months',
                                startDate: '15 Mar 2023',
                                deadline: '15 Sep 2023'
                            },
                            102: {
                                name: 'Downtown Plaza',
                                description: 'Mixed-use commercial development with retail and office spaces.',
                                status: 'Active',
                                progress: '75%',
                                client: 'Thompson Properties',
                                type: 'Commercial',
                                budget: '$1,200,000',
                                manager: 'Sarah Williams',
                                timeline: '01 May 2023 - 30 Dec 2023',
                                duration: '8 months',
                                startDate: '01 May 2023',
                                deadline: '30 Dec 2023'
                            }
                        };

                        const data = detailsData[projectId];
                        if (data) {
                            $('#detailProjectName').text(data.name);
                            $('#detailProjectDescription').text(data.description);
                            $('#detailProjectStatus').text(data.status).removeClass().addClass(`status-badge status-${data.status.toLowerCase()}`);
                            $('#detailProjectProgress').text(data.progress);
                            $('#detailClient').text(data.client);
                            $('#detailType').text(data.type);
                            $('#detailBudget').text(data.budget);
                            $('#detailManager').text(data.manager);
                            $('#detailTimeline').text(data.timeline);
                            $('#detailDuration').text(data.duration);
                            $('#detailStartDate').text(data.startDate);
                            $('#detailDeadline').text(data.deadline);
                            $('#detailProgressBar').css('width', data.progress);
                        }
                    }

                    // Helper functions
                    function clearProjectForm() {
                        $('#projectName').val('');
                        $('#projectType').val('residential');
                        $('#projectClient').val('');
                        $('#projectBudget').val('');
                        $('#projectStartDate').val('');
                        $('#projectDeadline').val('');
                        $('#projectDescription').val('');
                        $('#projectStatus').val('planning');
                        $('#projectProgress').val('0');
                        $('#progressPercentageText').text('0%');
                        $('#projectManager').val('');
                        $('#assignedTeam').val('');
                        $('#progressNotes').val('');
                        $('#assessmentNotes').val('');
                        $('#milestonesContainer').empty();
                        $('.verification-check, .assessment-check').prop('checked', false);
                    }

                    function addMilestoneField(milestone = { name: '', due: '' }) {
                        const milestoneId = Date.now();
                        const milestoneHtml = `
            <div class="milestone-field row mb-2" data-id="${milestoneId}">
                <div class="col-md-6">
                    <input type="text" class="form-control" placeholder="Milestone description" value="${milestone.name || ''}">
                </div>
                <div class="col-md-4">
                    <input type="date" class="form-control" value="${milestone.due || ''}">
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-sm btn-outline-danger remove-milestone">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
        `;
                        $('#milestonesContainer').append(milestoneHtml);
                    }

                    function loadMilestones(milestones) {
                        $('#milestonesContainer').empty();
                        milestones.forEach(milestone => {
                            addMilestoneField(milestone);
                        });
                    }

                    // Validation functions
                    function validateProjectApproval() {
                        const verificationChecked = $('#verifyClientIdentity').is(':checked');
                        const assessmentChecked = $('.assessment-check:checked').length === $('.assessment-check').length;
                        return verificationChecked && assessmentChecked && validateProjectForm();
                    }

                    function validateProjectForm() {
                        const required = ['#projectName', '#projectClient', '#projectBudget', '#projectStartDate', '#projectDeadline', '#projectDescription'];
                        let valid = true;

                        required.forEach(field => {
                            if (!$(field).val().trim()) {
                                valid = false;
                                $(field).addClass('is-invalid');
                            } else {
                                $(field).removeClass('is-invalid');
                            }
                        });

                        return valid;
                    }

                    // Action functions
                    function approveProject() {
                        const projectId = $('#managementProjectId').val();
                        console.log('Approving project:', projectId);
                        showAlert('Project approved successfully!', 'success');
                        $('#projectManagementModal').modal('hide');
                        loadNewProjects();
                    }

                    function rejectProject() {
                        const projectId = $('#managementProjectId').val();
                        console.log('Rejecting project:', projectId);
                        showAlert('Project rejected.', 'info');
                        $('#projectManagementModal').modal('hide');
                        loadNewProjects();
                    }

                    function saveProject() {
                        const actionType = $('#managementActionType').val();
                        const projectData = gatherProjectData();

                        console.log(`${actionType} project:`, projectData);
                        showAlert(`Project ${actionType === 'add' ? 'created' : 'updated'} successfully!`, 'success');
                        $('#projectManagementModal').modal('hide');
                    }

                    function gatherProjectData() {
                        return {
                            id: $('#managementProjectId').val(),
                            actionType: $('#managementActionType').val(),
                            name: $('#projectName').val(),
                            type: $('#projectType').val(),
                            client: $('#projectClient').val(),
                            budget: $('#projectBudget').val(),
                            startDate: $('#projectStartDate').val(),
                            deadline: $('#projectDeadline').val(),
                            description: $('#projectDescription').val(),
                            status: $('#projectStatus').val(),
                            progress: $('#projectProgress').val(),
                            manager: $('#projectManager').val(),
                            team: $('#assignedTeam').val(),
                            progressNotes: $('#progressNotes').val(),
                            assessmentNotes: $('#assessmentNotes').val()
                        };
                    }

                    function loadNewProjects() {
                        console.log('Loading new projects...');
                    }

                    function showAlert(message, type) {
                        const alertClass = {
                            'success': 'alert-success',
                            'error': 'alert-danger',
                            'warning': 'alert-warning',
                            'info': 'alert-info'
                        }[type] || 'alert-info';

                        const alertHtml = `
            <div class="alert ${alertClass} alert-dismissible fade show position-fixed top-0 end-0 m-3" style="z-index: 1060;">
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        `;

                        $('body').append(alertHtml);

                        setTimeout(() => {
                            $('.alert').alert('close');
                        }, 5000);
                    }
                });
            </script>

            <style>
                /* Project Management Styles */
                #newProjectsSection {
                    transition: all 0.3s ease;
                }

                .assessment-checklist .form-check,
                .verification-checklist .form-check {
                    padding: 0.5rem;
                    background: rgba(255, 255, 255, 0.03);
                    border-radius: 6px;
                    margin-bottom: 0.5rem;
                }

                .assessment-checklist .form-check-input:checked,
                .verification-checklist .form-check-input:checked {
                    background-color: var(--success-color);
                    border-color: var(--success-color);
                }

                .milestone-field {
                    padding: 0.5rem;
                    background: rgba(255, 255, 255, 0.05);
                    border-radius: 8px;
                    margin-bottom: 0.5rem;
                }

                .status-badge {
                    padding: 0.5rem 1rem;
                    border-radius: 20px;
                    font-weight: 600;
                    font-size: 0.8rem;
                }

                .status-completed {
                    background: rgba(46, 204, 113, 0.2);
                    color: var(--success-color);
                }

                .status-active {
                    background: rgba(52, 152, 219, 0.2);
                    color: var(--info-color);
                }

                .status-pending {
                    background: rgba(243, 156, 18, 0.2);
                    color: var(--warning-color);
                }

                .detail-item {
                    margin-bottom: 1rem;
                }

                    .detail-item h6 {
                        color: var(--primary-color);
                        margin-bottom: 0.25rem;
                        font-size: 0.9rem;
                    }

                    .detail-item p {
                        margin-bottom: 0;
                        font-weight: 500;
                    }

                .team-member-small,
                .milestone-small {
                    padding: 0.25rem 0;
                }

                    .milestone-small.completed {
                        color: var(--success-color);
                    }

                .updates-timeline .update-item {
                    border-left: 3px solid var(--primary-color);
                    padding-left: 15px;
                    margin-bottom: 1rem;
                }

                .update-date {
                    font-weight: 600;
                    color: var(--primary-color);
                    font-size: 0.9rem;
                }

                .update-author {
                    font-size: 0.8rem;
                    color: var(--dark-color);
                    opacity: 0.7;
                }
            </style>
        </div>

        <!-- Universal Client Update Modal -->
        <div class="modal fade" id="clientUpdateModal" tabindex="-1" aria-labelledby="clientUpdateModalLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content glass">
                    <div class="modal-header">
                        <h5 class="modal-title" id="clientUpdateModalLabel">
                            <span id="modalActionType">View Client</span> -
                        <span id="modalClientName">Client Name</span>
                        </h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" id="updateClientId">
                        <input type="hidden" id="updateClientType">
                        <!-- new, saved, add -->

                        <!-- Alert Section -->
                        <div class="alert" id="clientModalAlert" style="display: none;">
                            <i class="fas fa-info-circle me-2"></i>
                            <span id="alertMessage"></span>
                        </div>

                        <!-- Client Information -->
                        <div class="card glass mb-4">
                            <div class="card-header">
                                <h6 class="mb-0">Client Information</h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="clientFirstName" class="form-label">First Name *</label>
                                            <input type="text" class="form-control" id="clientFirstName" required>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="clientLastName" class="form-label">Last Name *</label>
                                            <input type="text" class="form-control" id="clientLastName" required>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="clientEmail" class="form-label">Email Address *</label>
                                            <input type="email" class="form-control" id="clientEmail" required>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="clientPhone" class="form-label">Phone Number *</label>
                                            <input type="tel" class="form-control" id="clientPhone" required>
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label for="clientCompany" class="form-label">Company / Organization</label>
                                    <input type="text" class="form-control" id="clientCompany">
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="clientType" class="form-label">Client Type *</label>
                                            <select class="form-select" id="clientType" required>
                                                <option value="residential">Residential</option>
                                                <option value="commercial">Commercial</option>
                                                <option value="industrial">Industrial</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="clientStatus" class="form-label">Status</label>
                                            <select class="form-select" id="clientStatus">
                                                <option value="lead">Lead</option>
                                                <option value="active">Active</option>
                                                <option value="inactive">Inactive</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Address Information -->
                        <div class="card glass mb-4">
                            <div class="card-header">
                                <h6 class="mb-0">Address Information</h6>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label for="clientAddress" class="form-label">Street Address</label>
                                    <input type="text" class="form-control" id="clientAddress">
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="mb-3">
                                            <label for="clientCity" class="form-label">City</label>
                                            <input type="text" class="form-control" id="clientCity">
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="mb-3">
                                            <label for="clientState" class="form-label">State</label>
                                            <input type="text" class="form-control" id="clientState">
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="mb-3">
                                            <label for="clientZip" class="form-label">ZIP Code</label>
                                            <input type="text" class="form-control" id="clientZip">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Project Information (For New Clients) -->
                        <div class="card glass mb-4" id="projectInfoSection">
                            <div class="card-header">
                                <h6 class="mb-0">Project Information</h6>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label for="projectDescription" class="form-label">Project Description</label>
                                    <textarea class="form-control" id="projectDescription" rows="3"
                                        placeholder="Describe the project requested by the client..."></textarea>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="projectBudget" class="form-label">Budget Range</label>
                                            <select class="form-select" id="projectBudget">
                                                <option value="under_50k">Under $50k</option>
                                                <option value="50k_100k">$50k - $100k</option>
                                                <option value="100k_250k">$100k - $250k</option>
                                                <option value="250k_500k">$250k - $500k</option>
                                                <option value="500k_plus">$500k+</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="projectTimeline" class="form-label">Desired Timeline</label>
                                            <select class="form-select" id="projectTimeline">
                                                <option value="asap">ASAP</option>
                                                <option value="1-3_months">1-3 months</option>
                                                <option value="3-6_months">3-6 months</option>
                                                <option value="6plus_months">6+ months</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Notes Section -->
                        <div class="card glass mb-4">
                            <div class="card-header">
                                <h6 class="mb-0">Additional Notes</h6>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label for="clientNotes" class="form-label">Client Notes</label>
                                    <textarea class="form-control" id="clientNotes" rows="3"
                                        placeholder="Add any additional notes about the client..."></textarea>
                                </div>
                            </div>
                        </div>

                        <!-- Verification Section (For New Clients) -->
                        <div class="card glass mb-4" id="verificationSection">
                            <div class="card-header">
                                <h6 class="mb-0">Verification Checklist</h6>
                            </div>
                            <div class="card-body">
                                <div class="verification-checklist">
                                    <div class="form-check mb-2">
                                        <input class="form-check-input verification-check" type="checkbox"
                                            id="verifyClientIdentity">
                                        <label class="form-check-label" for="verifyClientIdentity">
                                            Identity Verified
                                        </label>
                                    </div>
                                    <div class="form-check mb-2">
                                        <input class="form-check-input verification-check" type="checkbox"
                                            id="verifyClientContact">
                                        <label class="form-check-label" for="verifyClientContact">
                                            Contact Information Valid
                                        </label>
                                    </div>
                                    <div class="form-check mb-2">
                                        <input class="form-check-input verification-check" type="checkbox"
                                            id="verifyClientBudget">
                                        <label class="form-check-label" for="verifyClientBudget">
                                            Budget Realistic
                                        </label>
                                    </div>
                                    <div class="form-check mb-2">
                                        <input class="form-check-input verification-check" type="checkbox"
                                            id="verifyClientRequirements">
                                        <label class="form-check-label" for="verifyClientRequirements">
                                            Requirements Clear
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>

                        <!-- Reject Button (For New Clients) -->
                        <button type="button" class="btn btn-danger" id="rejectClientBtn" style="display: none;">
                            <i class="fas fa-times me-1"></i>Reject Client
                        </button>

                        <!-- Save/Update Button -->
                        <button type="button" class="btn btn-primary" id="saveClientBtn">
                            <i class="fas fa-save me-1"></i><span id="saveButtonText">Save Client</span>
                        </button>

                        <!-- Accept & Create Button (For New Clients) -->
                        <button type="button" class="btn btn-success" id="acceptClientBtn" style="display: none;">
                            <i class="fas fa-check me-1"></i>Accept & Create Client
                        </button>
                    </div>
                </div>
            </div>
            <script>// Client Management System
                $(document).ready(function () {
                    let currentClientData = null;

                    // View New Clients Button
                    $('#viewNewClientsBtn').click(function () {
                        $('#newClientsSection').slideToggle();
                        loadNewClients();
                    });

                    // Add New Client Button
                    $('#addNewClientBtn').click(function () {
                        openClientModal('add', null);
                    });

                    // Verify Client Button (New Clients)
                    $(document).on('click', '.verify-client-btn', function () {
                        const clientId = $(this).data('client-id');
                        const clientType = $(this).data('client-type');
                        const clientName = $(this).data('client-name');

                        openClientModal('verify', {
                            id: clientId,
                            type: clientType,
                            name: clientName
                        });
                    });

                    // View Client Button (Saved Clients)
                    $(document).on('click', '.view-client-btn', function () {
                        const clientId = $(this).data('client-id');
                        const clientType = $(this).data('client-type');

                        openClientModal('view', {
                            id: clientId,
                            type: clientType
                        });
                    });

                    // Message Client Button
                    $(document).on('click', '.message-client-btn', function () {
                        const clientCard = $(this).closest('.client-card');
                        const clientName = clientCard.find('h5').text();
                        alert(`Opening message interface for: ${clientName}`);
                        // Implement messaging functionality here
                    });

                    // Open Client Modal
                    function openClientModal(action, clientData) {
                        currentClientData = clientData;

                        // Set modal title and configuration based on action
                        switch (action) {
                            case 'verify':
                                setupModalForVerification(clientData);
                                break;
                            case 'view':
                                setupModalForView(clientData);
                                break;
                            case 'add':
                                setupModalForAdd();
                                break;
                        }

                        $('#clientUpdateModal').modal('show');
                    }

                    // Setup modal for verification (new clients)
                    function setupModalForVerification(clientData) {
                        $('#modalActionType').text('Verify Client');
                        $('#modalClientName').text(clientData.name);
                        $('#updateClientId').val(clientData.id);
                        $('#updateClientType').val('new');

                        // Show verification sections
                        $('#projectInfoSection').show();
                        $('#verificationSection').show();
                        $('#rejectClientBtn').show();
                        $('#acceptClientBtn').show();
                        $('#saveClientBtn').hide();

                        // Set alert
                        showModalAlert('This client is pending verification. Complete the checklist to accept them.', 'warning');

                        // Load client data (mock - replace with API call)
                        loadClientData(clientData.id, 'new');
                    }

                    // Setup modal for view (saved clients)
                    function setupModalForView(clientData) {
                        $('#modalActionType').text('View/Edit Client');
                        $('#modalClientName').text('Loading...');
                        $('#updateClientId').val(clientData.id);
                        $('#updateClientType').val('saved');

                        // Hide verification sections
                        $('#projectInfoSection').hide();
                        $('#verificationSection').hide();
                        $('#rejectClientBtn').hide();
                        $('#acceptClientBtn').hide();
                        $('#saveClientBtn').show();
                        $('#saveButtonText').text('Update Client');

                        // Hide alert
                        $('#clientModalAlert').hide();

                        // Load client data
                        loadClientData(clientData.id, 'saved');
                    }

                    // Setup modal for add (new client manually)
                    function setupModalForAdd() {
                        $('#modalActionType').text('Add New Client');
                        $('#modalClientName').text('New Client');
                        $('#updateClientId').val('');
                        $('#updateClientType').val('add');

                        // Show project info, hide verification
                        $('#projectInfoSection').show();
                        $('#verificationSection').hide();
                        $('#rejectClientBtn').hide();
                        $('#acceptClientBtn').hide();
                        $('#saveClientBtn').show();
                        $('#saveButtonText').text('Save Client');

                        // Set alert
                        showModalAlert('Add a new client to the system. They will be available immediately.', 'info');

                        // Clear form
                        clearClientForm();
                    }

                    // Load client data
                    function loadClientData(clientId, type) {
                        // Mock data - replace with API calls
                        const clientData = {
                            'new': {
                                1: {
                                    first_name: 'John',
                                    last_name: 'Smith',
                                    email: 'john.smith@email.com',
                                    phone: '(555) 123-4567',
                                    company: '',
                                    type: 'residential',
                                    address: '123 Main St',
                                    city: 'Anytown',
                                    state: 'CA',
                                    zip: '12345',
                                    project_description: 'Looking to build a modern 3-bedroom house with sustainable features.',
                                    budget: '100k_250k',
                                    timeline: '3-6_months',
                                    notes: 'Very interested in green building practices.'
                                },
                                2: {
                                    first_name: 'Sarah',
                                    last_name: 'Johnson',
                                    email: 'sarahj@company.com',
                                    phone: '(555) 987-6543',
                                    company: 'Tech Solutions Inc',
                                    type: 'commercial',
                                    address: '456 Business Ave',
                                    city: 'Metro City',
                                    state: 'NY',
                                    zip: '67890',
                                    project_description: 'Office space renovation with modern amenities and open layout.',
                                    budget: '500k_plus',
                                    timeline: '6plus_months',
                                    notes: 'Budget approved by board.'
                                }
                            },
                            'saved': {
                                1: {
                                    first_name: 'Jennifer',
                                    last_name: 'Martinez',
                                    email: 'jennifer@email.com',
                                    phone: '(555) 111-2222',
                                    company: '',
                                    type: 'residential',
                                    status: 'active',
                                    address: '789 Home Lane',
                                    city: 'Suburbia',
                                    state: 'TX',
                                    zip: '54321',
                                    notes: 'Great client, always pays on time.'
                                },
                                2: {
                                    first_name: 'David',
                                    last_name: 'Thompson',
                                    email: 'david@thompsoncorp.com',
                                    phone: '(555) 333-4444',
                                    company: 'Thompson Properties',
                                    type: 'commercial',
                                    status: 'active',
                                    address: '321 Corporate Blvd',
                                    city: 'Downtown',
                                    state: 'IL',
                                    zip: '98765',
                                    notes: 'Multiple project history.'
                                }
                            }
                        };

                        const data = clientData[type][clientId];
                        if (data) {
                            // Populate form fields
                            $('#clientFirstName').val(data.first_name);
                            $('#clientLastName').val(data.last_name);
                            $('#clientEmail').val(data.email);
                            $('#clientPhone').val(data.phone);
                            $('#clientCompany').val(data.company || '');
                            $('#clientType').val(data.type);
                            $('#clientStatus').val(data.status || 'lead');
                            $('#clientAddress').val(data.address || '');
                            $('#clientCity').val(data.city || '');
                            $('#clientState').val(data.state || '');
                            $('#clientZip').val(data.zip || '');
                            $('#clientNotes').val(data.notes || '');

                            if (type === 'new') {
                                $('#projectDescription').val(data.project_description || '');
                                $('#projectBudget').val(data.budget || 'under_50k');
                                $('#projectTimeline').val(data.timeline || 'asap');
                            }

                            // Update modal title with actual name
                            $('#modalClientName').text(`${data.first_name} ${data.last_name}`);
                        }
                    }

                    // Clear client form
                    function clearClientForm() {
                        $('#clientFirstName').val('');
                        $('#clientLastName').val('');
                        $('#clientEmail').val('');
                        $('#clientPhone').val('');
                        $('#clientCompany').val('');
                        $('#clientType').val('residential');
                        $('#clientStatus').val('lead');
                        $('#clientAddress').val('');
                        $('#clientCity').val('');
                        $('#clientState').val('');
                        $('#clientZip').val('');
                        $('#clientNotes').val('');
                        $('#projectDescription').val('');
                        $('#projectBudget').val('under_50k');
                        $('#projectTimeline').val('asap');

                        // Clear verification checks
                        $('.verification-check').prop('checked', false);
                    }

                    // Show modal alert
                    function showModalAlert(message, type) {
                        const alert = $('#clientModalAlert');
                        alert.removeClass('alert-warning alert-info alert-success alert-danger')
                            .addClass(`alert-${type}`);
                        $('#alertMessage').text(message);
                        alert.show();
                    }

                    // Accept Client Button
                    $('#acceptClientBtn').click(function () {
                        if (validateVerification()) {
                            acceptNewClient();
                        } else {
                            alert('Please complete all verification checks before accepting the client.');
                        }
                    });

                    // Reject Client Button
                    $('#rejectClientBtn').click(function () {
                        if (confirm('Are you sure you want to reject this client? This action cannot be undone.')) {
                            rejectNewClient();
                        }
                    });

                    // Save Client Button
                    $('#saveClientBtn').click(function () {
                        if (validateClientForm()) {
                            saveClient();
                        }
                    });

                    // Validation functions
                    function validateVerification() {
                        const checks = $('.verification-check:checked').length;
                        const totalChecks = $('.verification-check').length;
                        return checks === totalChecks && validateClientForm();
                    }

                    function validateClientForm() {
                        const required = ['#clientFirstName', '#clientLastName', '#clientEmail', '#clientPhone'];
                        let valid = true;

                        required.forEach(field => {
                            if (!$(field).val().trim()) {
                                valid = false;
                                $(field).addClass('is-invalid');
                            } else {
                                $(field).removeClass('is-invalid');
                            }
                        });

                        return valid;
                    }

                    // Action functions
                    function acceptNewClient() {
                        const clientData = gatherClientData();

                        // Mock API call to move from temp to permanent
                        console.log('Accepting new client:', clientData);

                        // In real implementation:
                        // 1. Insert into clients table
                        // 2. Remove from temp_clients table
                        // 3. Create initial project if needed

                        showAlert('Client accepted and added to system!', 'success');
                        $('#clientUpdateModal').modal('hide');
                        loadNewClients(); // Refresh the list
                    }

                    function rejectNewClient() {
                        const clientId = $('#updateClientId').val();

                        // Mock API call to reject client
                        console.log('Rejecting client:', clientId);

                        // In real implementation:
                        // Update temp_clients status to 'rejected'

                        showAlert('Client request rejected.', 'info');
                        $('#clientUpdateModal').modal('hide');
                        loadNewClients(); // Refresh the list
                    }

                    function saveClient() {
                        const clientData = gatherClientData();
                        const clientType = $('#updateClientType').val();

                        if (clientType === 'add') {
                            // Add new client
                            console.log('Adding new client:', clientData);
                            showAlert('New client added successfully!', 'success');
                        } else {
                            // Update existing client
                            console.log('Updating client:', clientData);
                            showAlert('Client updated successfully!', 'success');
                        }

                        $('#clientUpdateModal').modal('hide');
                    }

                    function gatherClientData() {
                        return {
                            id: $('#updateClientId').val(),
                            type: $('#updateClientType').val(),
                            first_name: $('#clientFirstName').val(),
                            last_name: $('#clientLastName').val(),
                            email: $('#clientEmail').val(),
                            phone: $('#clientPhone').val(),
                            company: $('#clientCompany').val(),
                            client_type: $('#clientType').val(),
                            status: $('#clientStatus').val(),
                            address: $('#clientAddress').val(),
                            city: $('#clientCity').val(),
                            state: $('#clientState').val(),
                            zip: $('#clientZip').val(),
                            notes: $('#clientNotes').val(),
                            project_description: $('#projectDescription').val(),
                            budget: $('#projectBudget').val(),
                            timeline: $('#projectTimeline').val()
                        };
                    }

                    // Load new clients (refresh data)
                    function loadNewClients() {
                        // This would be an API call in real implementation
                        console.log('Loading new clients...');
                    }

                    // Global alert function
                    function showAlert(message, type) {
                        const alertClass = {
                            'success': 'alert-success',
                            'error': 'alert-danger',
                            'warning': 'alert-warning',
                            'info': 'alert-info'
                        }[type] || 'alert-info';

                        const alertHtml = `
            <div class="alert ${alertClass} alert-dismissible fade show position-fixed top-0 end-0 m-3" style="z-index: 1060;">
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        `;

                        $('body').append(alertHtml);

                        setTimeout(() => {
                            $('.alert').alert('close');
                        }, 5000);
                    }
                });</script>
            <style>
                /* Client Management Styles */
                .client-card {
                    transition: transform 0.3s ease, box-shadow 0.3s ease;
                }

                    .client-card:hover {
                        transform: translateY(-5px);
                        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
                    }

                #newClientsSection {
                    transition: all 0.3s ease;
                }

                .verification-checklist .form-check {
                    padding: 0.5rem;
                    background: rgba(255, 255, 255, 0.03);
                    border-radius: 6px;
                    margin-bottom: 0.5rem;
                }

                .verification-checklist .form-check-input:checked {
                    background-color: var(--success-color);
                    border-color: var(--success-color);
                }

                .client-avatar {
                    width: 40px;
                    height: 40px;
                    border-radius: 50%;
                    object-fit: cover;
                }

                .client-info-cell {
                    min-width: 200px;
                }

                /* Status badges */
                .badge.bg-warning {
                    background: rgba(243, 156, 18, 0.2) !important;
                    color: var(--warning-color) !important;
                }

                .badge.bg-info {
                    background: rgba(52, 152, 219, 0.2) !important;
                    color: var(--info-color) !important;
                }

                /* Table enhancements */
                .table-hover tbody tr:hover {
                    background: rgba(255, 255, 255, 0.05);
                }

                /* Modal header colors based on action */
                .modal-header[data-action="verify"] {
                    border-bottom: 3px solid var(--warning-color);
                }

                .modal-header[data-action="view"] {
                    border-bottom: 3px solid var(--primary-color);
                }

                .modal-header[data-action="add"] {
                    border-bottom: 3px solid var(--success-color);
                }
            </style>
        </div>


        <!-- New Client Requests Modal -->
        <div class="modal fade" id="newClientRequestsModal" tabindex="-1" aria-labelledby="newClientRequestsModalLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-xl">
                <div class="modal-content glass">
                    <div class="modal-header">
                        <h5 class="modal-title" id="newClientRequestsModalLabel">New Client Requests</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="table-responsive">
                            <table class="data-table">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Email</th>
                                        <th>Phone</th>
                                        <th>Project Type</th>
                                        <th>Budget Range</th>
                                        <th>Request Date</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>John Smith</td>
                                        <td>john.smith@email.com</td>
                                        <td>(555) 123-4567</td>
                                        <td>Residential</td>
                                        <td>$100k - $250k</td>
                                        <td>2024-01-15</td>
                                        <td><span class="badge bg-warning">Pending Review</span></td>
                                        <td>
                                            <button class="btn btn-sm btn-primary view-client-request" data-id="1">
                                                <i class="fas fa-eye"></i>Review
                                            </button>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>Sarah Johnson</td>
                                        <td>sarahj@company.com</td>
                                        <td>(555) 987-6543</td>
                                        <td>Commercial</td>
                                        <td>$500k+</td>
                                        <td>2024-01-14</td>
                                        <td><span class="badge bg-info">Contacted</span></td>
                                        <td>
                                            <button class="btn btn-sm btn-primary view-client-request" data-id="2">
                                                <i class="fas fa-eye"></i>Review
                                            </button>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Client Request Details Modal -->
        <div class="modal fade" id="clientRequestDetailsModal" tabindex="-1"
            aria-labelledby="clientRequestDetailsModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content glass">
                    <div class="modal-header">
                        <h5 class="modal-title" id="clientRequestDetailsModalLabel">Client Request Details</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row mb-4">
                            <div class="col-md-6">
                                <h6>Personal Information</h6>
                                <div class="info-group">
                                    <label>Full Name:</label>
                                    <span id="clientRequestName">John Smith</span>
                                </div>
                                <div class="info-group">
                                    <label>Email:</label>
                                    <span id="clientRequestEmail">john.smith@email.com</span>
                                </div>
                                <div class="info-group">
                                    <label>Phone:</label>
                                    <span id="clientRequestPhone">(555) 123-4567</span>
                                </div>
                                <div class="info-group">
                                    <label>Company:</label>
                                    <span id="clientRequestCompany">-</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <h6>Project Details</h6>
                                <div class="info-group">
                                    <label>Project Type:</label>
                                    <span id="clientRequestType">Residential</span>
                                </div>
                                <div class="info-group">
                                    <label>Budget Range:</label>
                                    <span id="clientRequestBudget">$100k - $250k</span>
                                </div>
                                <div class="info-group">
                                    <label>Timeline:</label>
                                    <span id="clientRequestTimeline">3-6 months</span>
                                </div>
                                <div class="info-group">
                                    <label>Request Date:</label>
                                    <span id="clientRequestDate">2024-01-15</span>
                                </div>
                            </div>
                        </div>

                        <div class="mb-4">
                            <h6>Project Description</h6>
                            <div class="project-description-box">
                                <p id="clientRequestDescription">
                                    Looking to build a modern 3-bedroom house with sustainable
                                features and smart home technology. The property is located in a suburban area with
                                existing land ownership.
                                </p>
                            </div>
                        </div>

                        <div class="mb-4">
                            <h6>Verification Notes</h6>
                            <textarea class="form-control" id="verificationNotes" rows="3"
                                placeholder="Add verification notes..."></textarea>
                        </div>

                        <div class="mb-4">
                            <h6>Client Verification</h6>
                            <div class="verification-checklist">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="verifyIdentity">
                                    <label class="form-check-label" for="verifyIdentity">
                                        Identity Verified
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="verifyBudget">
                                    <label class="form-check-label" for="verifyBudget">
                                        Budget Confirmed
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="verifyRequirements">
                                    <label class="form-check-label" for="verifyRequirements">
                                        Requirements Clear
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="verifyTimeline">
                                    <label class="form-check-label" for="verifyTimeline">
                                        Timeline Realistic
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-warning" id="requestMoreInfo">
                            <i class="fas fa-info-circle me-1"></i>Request More Info
                        </button>
                        <button type="button" class="btn btn-danger" id="rejectClient">
                            <i class="fas fa-times me-1"></i>Reject
                        </button>
                        <button type="button" class="btn btn-success" id="acceptClient">
                            <i class="fas fa-check me-1"></i>Accept Client
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Project Approval Modal -->
        <div class="modal fade" id="projectApprovalModal" tabindex="-1" aria-labelledby="projectApprovalModalLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content glass">
                    <div class="modal-header">
                        <h5 class="modal-title" id="projectApprovalModalLabel">Setup New Project</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            Setting up project for: <strong id="setupClientName">John Smith</strong>
                        </div>

                        <form id="projectSetupForm">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="approvedProjectName" class="form-label">Project Name *</label>
                                        <input type="text" class="form-control" id="approvedProjectName" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="approvedProjectType" class="form-label">Project Type *</label>
                                        <select class="form-select" id="approvedProjectType" required>
                                            <option value="residential">Residential</option>
                                            <option value="commercial">Commercial</option>
                                            <option value="industrial">Industrial</option>
                                            <option value="renovation">Renovation</option>
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="approvedBudget" class="form-label">Approved Budget *</label>
                                        <div class="input-group">
                                            <span class="input-group-text">$</span>
                                            <input type="number" class="form-control" id="approvedBudget" required>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="projectManager" class="form-label">Project Manager *</label>
                                        <select class="form-select" id="projectManager" required>
                                            <option value="">Select Manager</option>
                                            <option value="1">Sarah Williams</option>
                                            <option value="2">Michael Johnson</option>
                                            <option value="3">Robert Chen</option>
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="projectStartDate" class="form-label">Start Date *</label>
                                        <input type="date" class="form-control" id="projectStartDate" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="projectDeadline" class="form-label">Deadline *</label>
                                        <input type="date" class="form-control" id="projectDeadline" required>
                                    </div>
                                </div>
                            </div>

                            <div class="mb-3">
                                <label for="projectScope" class="form-label">Project Scope & Description</label>
                                <textarea class="form-control" id="projectScope" rows="4" required></textarea>
                            </div>

                            <div class="mb-3">
                                <label for="assignedTeam" class="form-label">Assigned Team Members</label>
                                <select class="form-select" id="assignedTeam" multiple>
                                    <option value="1">Michael Johnson - General Contractor</option>
                                    <option value="2">Sarah Williams - Project Manager</option>
                                    <option value="3">Robert Chen - Structural Engineer</option>
                                    <option value="4">David Kim - Architect</option>
                                </select>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Project Milestones</label>
                                <div id="milestonesContainer">
                                    <div class="milestone-item mb-2">
                                        <div class="input-group">
                                            <input type="text" class="form-control" placeholder="Milestone description">
                                            <input type="date" class="form-control" placeholder="Due date">
                                            <button type="button" class="btn btn-outline-danger remove-milestone">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <button type="button" class="btn btn-sm btn-outline-primary" id="addMilestone">
                                    <i class="fas fa-plus me-1"></i>Add Milestone
                                </button>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="saveProjectSetup">
                            <i class="fas fa-save me-1"></i>Create Project
                        </button>
                    </div>
                </div>
            </div>
        </div>



        <!-- Project Progress Update Modal -->
        <div class="modal fade" id="projectProgressModal" tabindex="-1" aria-labelledby="projectProgressModalLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content glass">
                    <div class="modal-header">
                        <h5 class="modal-title" id="projectProgressModalLabel">Update Project Progress</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row mb-4">
                            <div class="col-md-8">
                                <h6>Project: <span id="updateProjectName">Hilltop Residence</span></h6>
                                <p class="text-muted" id="updateProjectClient">Client: Jennifer Martinez</p>
                            </div>
                            <div class="col-md-4">
                                <div class="current-progress">
                                    <label>Current Progress:</label>
                                    <div class="progress mb-2">
                                        <div class="progress-bar" id="currentProgressBar" style="width: 75%"></div>
                                    </div>
                                    <span id="currentProgressText">75% Complete</span>
                                </div>
                            </div>
                        </div>

                        <form id="progressUpdateForm">
                            <div class="mb-3">
                                <label for="progressPercentage" class="form-label">Update Progress Percentage</label>
                                <input type="range" class="form-range" id="progressPercentage" min="0" max="100" value="75">
                                <div class="d-flex justify-content-between">
                                    <small>0%</small>
                                    <small id="progressValue">75%</small>
                                    <small>100%</small>
                                </div>
                            </div>

                            <div class="mb-3">
                                <label for="progressStatus" class="form-label">Project Status</label>
                                <select class="form-select" id="progressStatus">
                                    <option value="planning">Planning</option>
                                    <option value="active" selected>Active</option>
                                    <option value="on_hold">On Hold</option>
                                    <option value="completed">Completed</option>
                                    <option value="cancelled">Cancelled</option>
                                </select>
                            </div>

                            <div class="mb-3">
                                <label for="progressUpdate" class="form-label">Progress Update *</label>
                                <textarea class="form-control" id="progressUpdate" rows="4"
                                    placeholder="Describe what has been completed, current challenges, next steps..."
                                    required></textarea>
                            </div>

                            <div class="mb-3">
                                <label for="nextMilestone" class="form-label">Next Milestone</label>
                                <input type="text" class="form-control" id="nextMilestone"
                                    placeholder="Next major milestone">
                            </div>

                            <div class="mb-3">
                                <label for="estimatedCompletion" class="form-label">Estimated Completion Date</label>
                                <input type="date" class="form-control" id="estimatedCompletion">
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Issues & Challenges</label>
                                <div class="issues-list">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="issueWeather">
                                        <label class="form-check-label" for="issueWeather">
                                            Weather Delays
                                        </label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="issueMaterials">
                                        <label class="form-check-label" for="issueMaterials">
                                            Material Shortages
                                        </label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="issueLabor">
                                        <label class="form-check-label" for="issueLabor">
                                            Labor Shortages
                                        </label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="issueDesign">
                                        <label class="form-check-label" for="issueDesign">
                                            Design Changes
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="saveProgressUpdate">
                            <i class="fas fa-save me-1"></i>Update Progress
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <script>
            // Admin Workflow Management
            $(document).ready(function () {
                let currentClientRequestId = null;
                let currentProjectId = null;

                // Open New Client Requests Modal
                $(document).on('click', '.client-requests-btn', function () {
                    $('#newClientRequestsModal').modal('show');
                    loadClientRequests();
                });

                // View Client Request Details
                $(document).on('click', '.view-client-request', function () {
                    const requestId = $(this).data('id');
                    currentClientRequestId = requestId;
                    loadClientRequestDetails(requestId);
                    $('#clientRequestDetailsModal').modal('show');
                });

                // Accept Client
                $('#acceptClient').click(function () {
                    if (validateClientVerification()) {
                        const clientName = $('#clientRequestName').text();
                        $('#setupClientName').text(clientName);
                        $('#projectApprovalModal').modal('show');
                        $('#clientRequestDetailsModal').modal('hide');
                    } else {
                        alert('Please complete all verification checks before accepting the client.');
                    }
                });

                // Reject Client
                $('#rejectClient').click(function () {
                    if (confirm('Are you sure you want to reject this client request?')) {
                        // Update status to rejected
                        updateClientRequestStatus(currentClientRequestId, 'rejected');
                        $('#clientRequestDetailsModal').modal('hide');
                        showAlert('Client request rejected successfully', 'info');
                    }
                });

                // Add Milestone
                $('#addMilestone').click(function () {
                    $('#milestonesContainer').append(`
            <div class="milestone-item mb-2">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Milestone description" required>
                    <input type="date" class="form-control" placeholder="Due date" required>
                    <button type="button" class="btn btn-outline-danger remove-milestone">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
        `);
                });

                // Remove Milestone
                $(document).on('click', '.remove-milestone', function () {
                    $(this).closest('.milestone-item').remove();
                });

                // Save Project Setup
                $('#saveProjectSetup').click(function () {
                    if (validateProjectSetup()) {
                        createNewProject();
                        $('#projectApprovalModal').modal('hide');
                        showAlert('Project created successfully!', 'success');
                    }
                });

                // Update Progress Slider
                $('#progressPercentage').on('input', function () {
                    const value = $(this).val();
                    $('#progressValue').text(value + '%');
                    $('#currentProgressBar').css('width', value + '%');
                });

                // Open Progress Update Modal
                $(document).on('click', '.update-progress-btn', function () {
                    const projectId = $(this).data('project');
                    currentProjectId = projectId;
                    loadProjectProgressData(projectId);
                    $('#projectProgressModal').modal('show');
                });

                // Save Progress Update
                $('#saveProgressUpdate').click(function () {
                    if (validateProgressUpdate()) {
                        updateProjectProgress();
                        $('#projectProgressModal').modal('hide');
                        showAlert('Project progress updated successfully!', 'success');
                    }
                });

                // Validation Functions
                function validateClientVerification() {
                    return $('#verifyIdentity').is(':checked') &&
                        $('#verifyBudget').is(':checked') &&
                        $('#verifyRequirements').is(':checked') &&
                        $('#verifyTimeline').is(':checked');
                }

                function validateProjectSetup() {
                    return $('#approvedProjectName').val() !== '' &&
                        $('#approvedBudget').val() !== '' &&
                        $('#projectStartDate').val() !== '' &&
                        $('#projectDeadline').val() !== '';
                }

                function validateProgressUpdate() {
                    return $('#progressUpdate').val() !== '';
                }

                // Data Loading Functions (Mock - Replace with API calls)
                function loadClientRequests() {
                    // Mock data loading
                    console.log('Loading client requests...');
                }

                function loadClientRequestDetails(requestId) {
                    // Mock data - replace with API call
                    const requestData = {
                        1: {
                            name: 'John Smith',
                            email: 'john.smith@email.com',
                            phone: '(555) 123-4567',
                            company: '-',
                            type: 'Residential',
                            budget: '$100k - $250k',
                            timeline: '3-6 months',
                            date: '2024-01-15',
                            description: 'Looking to build a modern 3-bedroom house with sustainable features and smart home technology.'
                        }
                    };

                    const data = requestData[requestId];
                    if (data) {
                        $('#clientRequestName').text(data.name);
                        $('#clientRequestEmail').text(data.email);
                        $('#clientRequestPhone').text(data.phone);
                        $('#clientRequestCompany').text(data.company);
                        $('#clientRequestType').text(data.type);
                        $('#clientRequestBudget').text(data.budget);
                        $('#clientRequestTimeline').text(data.timeline);
                        $('#clientRequestDate').text(data.date);
                        $('#clientRequestDescription').text(data.description);
                    }
                }

                function loadProjectProgressData(projectId) {
                    // Mock data - replace with API call
                    const projectData = {
                        1: {
                            name: 'Hilltop Residence',
                            client: 'Jennifer Martinez',
                            progress: 75,
                            status: 'active'
                        }
                    };

                    const data = projectData[projectId];
                    if (data) {
                        $('#updateProjectName').text(data.name);
                        $('#updateProjectClient').text('Client: ' + data.client);
                        $('#progressPercentage').val(data.progress);
                        $('#progressValue').text(data.progress + '%');
                        $('#currentProgressBar').css('width', data.progress + '%');
                        $('#currentProgressText').text(data.progress + '% Complete');
                        $('#progressStatus').val(data.status);
                    }
                }

                function updateClientRequestStatus(requestId, status) {
                    // Mock API call to update status
                    console.log(`Updating request ${requestId} to status: ${status}`);
                }

                function createNewProject() {
                    const projectData = {
                        name: $('#approvedProjectName').val(),
                        type: $('#approvedProjectType').val(),
                        budget: $('#approvedBudget').val(),
                        startDate: $('#projectStartDate').val(),
                        deadline: $('#projectDeadline').val(),
                        description: $('#projectScope').val(),
                        manager: $('#projectManager').val(),
                        team: $('#assignedTeam').val()
                    };

                    // Mock API call to create project
                    console.log('Creating new project:', projectData);

                    // Add to projects table
                    addProjectToTable(projectData);
                }

                function updateProjectProgress() {
                    const progressData = {
                        projectId: currentProjectId,
                        progress: $('#progressPercentage').val(),
                        status: $('#progressStatus').val(),
                        update: $('#progressUpdate').val(),
                        nextMilestone: $('#nextMilestone').val(),
                        estimatedCompletion: $('#estimatedCompletion').val()
                    };

                    // Mock API call to update progress
                    console.log('Updating project progress:', progressData);

                    // Update progress in table
                    updateProjectInTable(progressData);
                }

                function addProjectToTable(projectData) {
                    // Add new project to the projects table
                    const newRow = `
            <tr>
                <td>${projectData.name}</td>
                <td>${projectData.type}</td>
                <td>${$('#setupClientName').text()}</td>
                <td>$${projectData.budget}</td>
                <td>${projectData.startDate}</td>
                <td>${projectData.deadline}</td>
                <td>
                    <div class="progress">
                        <div class="progress-bar bg-primary" style="width: 0%"></div>
                    </div>
                </td>
                <td><span class="status-badge status-pending">Planning</span></td>
                <td>
                    <button class="action-btn view-project" title="View Details">
                        <i class="fas fa-eye"></i>
                    </button>
                    <button class="action-btn update-progress-btn" data-project="${Date.now()}" title="Update Progress">
                        <i class="fas fa-chart-line"></i>
                    </button>
                </td>
            </tr>
        `;

                    $('.data-table tbody').prepend(newRow);
                }

                function updateProjectInTable(progressData) {
                    // Update project progress in table
                    $(`.update-progress-btn[data-project="${progressData.projectId}"]`)
                        .closest('tr')
                        .find('.progress-bar')
                        .css('width', progressData.progress + '%')
                        .removeClass('bg-primary bg-warning bg-success')
                        .addClass(getProgressBarClass(progressData.progress));

                    // Update status badge
                    const statusBadge = $(`.update-progress-btn[data-project="${progressData.projectId}"]`)
                        .closest('tr')
                        .find('.status-badge');

                    statusBadge
                        .text(progressData.status.charAt(0).toUpperCase() + progressData.status.slice(1))
                        .removeClass('status-pending status-active status-completed')
                        .addClass(getStatusClass(progressData.status));
                }

                function getProgressBarClass(progress) {
                    if (progress >= 100) return 'bg-success';
                    if (progress >= 50) return 'bg-primary';
                    return 'bg-warning';
                }

                function getStatusClass(status) {
                    const statusClasses = {
                        'planning': 'status-pending',
                        'active': 'status-active',
                        'completed': 'status-completed',
                        'on_hold': 'status-delayed',
                        'cancelled': 'status-delayed'
                    };
                    return statusClasses[status] || 'status-pending';
                }
            });

        </script>

        <style>
            /* Workflow Management Styles */
            .info-group {
                margin-bottom: 0.75rem;
                padding: 0.5rem;
                background: rgba(255, 255, 255, 0.05);
                border-radius: 8px;
            }

                .info-group label {
                    font-weight: 600;
                    color: var(--primary-color);
                    margin-right: 0.5rem;
                }

                .info-group span {
                    color: var(--dark-color);
                }

            .project-description-box {
                background: rgba(255, 255, 255, 0.05);
                border-radius: 8px;
                padding: 1rem;
                border-left: 4px solid var(--primary-color);
            }

            .verification-checklist .form-check {
                margin-bottom: 0.5rem;
                padding: 0.5rem;
                background: rgba(255, 255, 255, 0.03);
                border-radius: 6px;
            }

            .milestone-item .input-group {
                gap: 0.5rem;
            }

            .issues-list .form-check {
                display: inline-block;
                margin-right: 1rem;
                margin-bottom: 0.5rem;
            }

            .current-progress {
                text-align: center;
                padding: 1rem;
                background: rgba(255, 255, 255, 0.05);
                border-radius: 10px;
            }

                .current-progress label {
                    font-weight: 600;
                    color: var(--primary-color);
                    display: block;
                    margin-bottom: 0.5rem;
                }

            /* Add to existing status badges */
            .status-delayed {
                background: rgba(231, 76, 60, 0.2);
                color: var(--danger-color);
            }
        </style>

        <!-- Login Modal -->
        <div class="modal fade" id="loginModal" tabindex="-1" aria-labelledby="loginModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content glass">
                    <div class="modal-header">
                        <h5 class="modal-title" id="loginModalLabel">Admin Login</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="loginForm">
                            <div class="mb-3">
                                <label for="loginEmail" class="form-label">Email Address</label>
                                <input type="email" class="form-control" id="loginEmail" required>
                            </div>
                            <div class="mb-3">
                                <label for="loginPassword" class="form-label">Password</label>
                                <input type="password" class="form-control" id="loginPassword" required>
                            </div>
                            <div class="mb-3 form-check">
                                <input type="checkbox" class="form-check-input" id="rememberMe">
                                <label class="form-check-label" for="rememberMe">Remember me</label>
                            </div>
                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary">Login</button>
                            </div>
                        </form>
                        <div class="text-center mt-3">
                            <a href="#" class="text-muted">Forgot password?</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- User Profile Modal -->
        <div class="modal fade" id="userProfileModal" tabindex="-1" aria-labelledby="userProfileModalLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content glass">
                    <div class="modal-header">
                        <h5 class="modal-title" id="userProfileModalLabel">My Profile</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-4 text-center">
                                <div class="mb-3">
                                    <img src="https://randomuser.me/api/portraits/men/1.jpg" alt="Profile"
                                        class="rounded-circle" width="120" height="120">
                                    <div class="mt-2">
                                        <button class="btn btn-sm btn-outline-primary">Change Photo</button>
                                    </div>
                                </div>
                                <h5 id="profileName">John Doe</h5>
                                <p class="text-muted" id="profileRole">Administrator</p>
                                <div class="badge bg-success">Active</div>
                            </div>
                            <div class="col-md-8">
                                <form id="profileForm">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                <label for="profileFirstName" class="form-label">
                                                    First
                                                Name</label>
                                                <input type="text" class="form-control" id="profileFirstName" value="John">
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                <label for="profileLastName" class="form-label">
                                                    Last
                                                Name</label>
                                                <input type="text" class="form-control" id="profileLastName" value="Doe">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="profileEmail" class="form-label">Email Address</label>
                                        <input type="email" class="form-control" id="profileEmail"
                                            value="john.doe@buildright.com">
                                    </div>
                                    <div class="mb-3">
                                        <label for="profilePhone" class="form-label">Phone Number</label>
                                        <input type="tel" class="form-control" id="profilePhone" value="(555) 123-4567">
                                    </div>
                                    <div class="mb-3">
                                        <label for="profileAddress" class="form-label">Address</label>
                                        <textarea class="form-control" id="profileAddress"
                                            rows="2">123 Construction Ave, Building City</textarea>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                <label for="profileDepartment" class="form-label">Department</label>
                                                <select class="form-select" id="profileDepartment">
                                                    <option value="management">Management</option>
                                                    <option value="construction" selected>Construction
                                                    </option>
                                                    <option value="design">Design</option>
                                                    <option value="finance">Finance</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                <label for="profileRole" class="form-label">Role</label>
                                                <select class="form-select" id="profileRole">
                                                    <option value="admin" selected>Administrator</option>
                                                    <option value="manager">Project Manager</option>
                                                    <option value="contractor">Contractor</option>
                                                    <option value="viewer">Viewer</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <hr>
                                    <h6 class="mb-3">Change Password</h6>
                                    <div class="mb-3">
                                        <label for="currentPassword" class="form-label">
                                            Current
                                        Password</label>
                                        <input type="password" class="form-control" id="currentPassword">
                                    </div>
                                    <div class="mb-3">
                                        <label for="newPassword" class="form-label">New Password</label>
                                        <input type="password" class="form-control" id="newPassword">
                                    </div>
                                    <div class="mb-3">
                                        <label for="confirmPassword" class="form-label">
                                            Confirm New
                                        Password</label>
                                        <input type="password" class="form-control" id="confirmPassword">
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="saveProfile">Save Changes</button>
                    </div>
                </div>
            </div>
        </div>


        <!-- Bootstrap JS -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

        <script>
            $(document).ready(function () {
                // Sidebar toggle
                $('.sidebar-toggle').click(function () {
                    $('.sidebar').toggleClass('collapsed');
                });

                // Navigation
                $('.menu-link').click(function (e) {
                    e.preventDefault();

                    // Remove active class from all menu items
                    $('.menu-link').removeClass('active');

                    // Add active class to clicked menu item
                    $(this).addClass('active');

                    // Get section to show
                    const section = $(this).data('section');

                    // Update page title
                    $('.page-title').text($(this).find('.menu-text').text());

                    // Hide all sections
                    $('.section').removeClass('active');

                    // Show selected section
                    $(`#${section}`).addClass('active');
                });

                // Theme switching
                $('.theme-btn').click(function () {
                    const theme = $(this).data('theme');
                    $('body').attr('data-theme', theme);
                    localStorage.setItem('admin-theme', theme);

                    // Update charts when theme changes
                    createCharts();
                });

                // Load saved theme
                const savedTheme = localStorage.getItem('admin-theme') || 'default';
                $('body').attr('data-theme', savedTheme);

                // Project details modal
                $('.view-project').click(function () {
                    const row = $(this).closest('tr');
                    $('#detailProjectName').text(row.find('td:eq(0)').text());
                    $('#detailClient').text(row.find('td:eq(1)').text());
                    $('#detailType').text(row.find('td:eq(1)').text());
                    $('#detailBudget').text(row.find('td:eq(3)').text());
                    $('#detailStartDate').text(row.find('td:eq(2)').text());
                    $('#detailDeadline').text(row.find('td:eq(3)').text());
                    $('#detailTimeline').text(`${row.find('td:eq(2)').text()} - ${row.find('td:eq(3)').text()}`);
                    $('#detailProgressBar').css('width', row.find('.progress-bar').css('width'));
                    $('#detailProjectStatus').text(row.find('.status-badge').text()).attr('class', row.find('.status-badge').attr('class'));

                    $('#projectDetailsModal').modal('show');
                });

                // Save project
                $('#saveProject').click(function () {
                    // Simple form validation
                    let valid = true;
                    $('#addProjectForm input, #addProjectForm select, #addProjectForm textarea').each(function () {
                        if ($(this).prop('required') && !$(this).val()) {
                            valid = false;
                            $(this).addClass('is-invalid');
                        } else {
                            $(this).removeClass('is-invalid');
                        }
                    });

                    if (valid) {
                        alert('Project added successfully!');
                        $('#addProjectModal').modal('hide');
                        $('#addProjectForm')[0].reset();
                    }
                });

                // Initialize charts
                function createCharts() {
                    // Progress Chart
                    const progressCtx = document.getElementById('progressChart').getContext('2d');
                    const progressChart = new Chart(progressCtx, {
                        type: 'bar',
                        data: {
                            labels: ['Hilltop Residence', 'Downtown Plaza', 'Logistics Hub', 'Old Town Theater', 'Riverfront Condos', 'Tech Park'],
                            datasets: [{
                                label: 'Progress %',
                                data: [100, 75, 100, 40, 60, 25],
                                backgroundColor: [
                                    'rgba(46, 204, 113, 0.7)',
                                    'rgba(52, 152, 219, 0.7)',
                                    'rgba(46, 204, 113, 0.7)',
                                    'rgba(243, 156, 18, 0.7)',
                                    'rgba(52, 152, 219, 0.7)',
                                    'rgba(155, 89, 182, 0.7)'
                                ],
                                borderColor: [
                                    'rgba(46, 204, 113, 1)',
                                    'rgba(52, 152, 219, 1)',
                                    'rgba(46, 204, 113, 1)',
                                    'rgba(243, 156, 18, 1)',
                                    'rgba(52, 152, 219, 1)',
                                    'rgba(155, 89, 182, 1)'
                                ],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    max: 100,
                                    ticks: {
                                        callback: function (value) {
                                            return value + '%';
                                        }
                                    }
                                }
                            }
                        }
                    });

                    // Budget Chart
                    const budgetCtx = document.getElementById('budgetChart').getContext('2d');
                    const budgetChart = new Chart(budgetCtx, {
                        type: 'doughnut',
                        data: {
                            labels: ['Labor', 'Materials', 'Equipment', 'Subcontractors', 'Permits', 'Other'],
                            datasets: [{
                                data: [35, 25, 15, 15, 5, 5],
                                backgroundColor: [
                                    'rgba(248, 181, 0, 0.7)',
                                    'rgba(46, 204, 113, 0.7)',
                                    'rgba(52, 152, 219, 0.7)',
                                    'rgba(155, 89, 182, 0.7)',
                                    'rgba(243, 156, 18, 0.7)',
                                    'rgba(231, 76, 60, 0.7)'
                                ],
                                borderColor: [
                                    'rgba(248, 181, 0, 1)',
                                    'rgba(46, 204, 113, 1)',
                                    'rgba(52, 152, 219, 1)',
                                    'rgba(155, 89, 182, 1)',
                                    'rgba(243, 156, 18, 1)',
                                    'rgba(231, 76, 60, 1)'
                                ],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    position: 'bottom'
                                }
                            }
                        }
                    });

                    // Finance Chart
                    const financeCtx = document.getElementById('financeChart').getContext('2d');
                    const financeChart = new Chart(financeCtx, {
                        type: 'line',
                        data: {
                            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                            datasets: [{
                                label: 'Revenue',
                                data: [85000, 102000, 98000, 110000, 125000, 140000, 135000, 150000, 145000, 160000, 155000, 170000],
                                borderColor: 'rgba(46, 204, 113, 1)',
                                backgroundColor: 'rgba(46, 204, 113, 0.1)',
                                tension: 0.3,
                                fill: true
                            }, {
                                label: 'Expenses',
                                data: [65000, 72000, 68000, 75000, 82000, 90000, 95000, 92000, 98000, 105000, 102000, 110000],
                                borderColor: 'rgba(231, 76, 60, 1)',
                                backgroundColor: 'rgba(231, 76, 60, 0.1)',
                                tension: 0.3,
                                fill: true
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        callback: function (value) {
                                            return '$' + value.toLocaleString();
                                        }
                                    }
                                }
                            }
                        }
                    });

                    // Project Status Chart
                    const projectStatusCtx = document.getElementById('projectStatusChart').getContext('2d');
                    const projectStatusChart = new Chart(projectStatusCtx, {
                        type: 'pie',
                        data: {
                            labels: ['Completed', 'Active', 'Planning', 'Delayed'],
                            datasets: [{
                                data: [5, 4, 2, 1],
                                backgroundColor: [
                                    'rgba(46, 204, 113, 0.7)',
                                    'rgba(52, 152, 219, 0.7)',
                                    'rgba(243, 156, 18, 0.7)',
                                    'rgba(231, 76, 60, 0.7)'
                                ],
                                borderColor: [
                                    'rgba(46, 204, 113, 1)',
                                    'rgba(52, 152, 219, 1)',
                                    'rgba(243, 156, 18, 1)',
                                    'rgba(231, 76, 60, 1)'
                                ],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    position: 'bottom'
                                }
                            }
                        }
                    });

                    // Timeline Chart
                    const timelineCtx = document.getElementById('timelineChart').getContext('2d');
                    const timelineChart = new Chart(timelineCtx, {
                        type: 'bar',
                        data: {
                            labels: ['Q1', 'Q2', 'Q3', 'Q4'],
                            datasets: [{
                                label: 'Projects Started',
                                data: [3, 4, 3, 2],
                                backgroundColor: 'rgba(52, 152, 219, 0.7)'
                            }, {
                                label: 'Projects Completed',
                                data: [2, 3, 2, 5],
                                backgroundColor: 'rgba(46, 204, 113, 0.7)'
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                x: {
                                    stacked: false
                                },
                                y: {
                                    stacked: false,
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                }

                // Initialize charts on page load
                createCharts();

                // Animate progress bars on scroll
                function animateProgressBars() {
                    $('.progress-bar').each(function () {
                        const width = $(this).css('width');
                        $(this).css('width', '0');
                        setTimeout(() => {
                            $(this).css('width', width);
                        }, 500);
                    });
                }

                // Animate progress bars when section becomes active
                $('.menu-link').click(function () {
                    setTimeout(animateProgressBars, 300);
                });

                // Responsive sidebar behavior
                function handleSidebar() {
                    if ($(window).width() < 992) {
                        $('.sidebar').addClass('collapsed');
                    } else {
                        $('.sidebar').removeClass('collapsed');
                    }
                }

                // Initial check
                handleSidebar();

                // Handle resize
                $(window).resize(function () {
                    handleSidebar();
                });
            });
        </script>


    </form>
    <asp:PlaceHolder runat="server">
        <%: Scripts.Render("~/Scripts/bootstrap.js") %>
    </asp:PlaceHolder>
</body>
</html>
